<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AWSSDK.Rekognition</name>
    </assembly>
    <members>
        <member name="T:Amazon.Rekognition.AmazonRekognitionConfig">
            <summary>
            Configuration for accessing Amazon Rekognition service
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.AmazonRekognitionConfig.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.AmazonRekognitionConfig.RegionEndpointServiceName">
            <summary>
            The constant used to lookup in the region hash the endpoint.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.AmazonRekognitionConfig.ServiceVersion">
            <summary>
            Gets the ServiceVersion property.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.AmazonRekognitionConfig.UserAgent">
            <summary>
            Gets the value of UserAgent property.
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.AmazonRekognitionException">
            <summary>
             Common exception for the Rekognition service.
             </summary>
        </member>
        <member name="M:Amazon.Rekognition.AmazonRekognitionException.#ctor(System.String)">
            <summary>
            Construct instance of AmazonRekognitionException
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Amazon.Rekognition.AmazonRekognitionException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of AmazonRekognitionException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Rekognition.AmazonRekognitionException.#ctor(System.Exception)">
            <summary>
            Construct instance of AmazonRekognitionException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Rekognition.AmazonRekognitionException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AmazonRekognitionException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Rekognition.AmazonRekognitionException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AmazonRekognitionException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.Rekognition.Model.AccessDeniedException">
            <summary>
             Rekognition exception
             </summary>
        </member>
        <member name="M:Amazon.Rekognition.Model.AccessDeniedException.#ctor(System.String)">
            <summary>
            Constructs a new AccessDeniedException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Rekognition.Model.AccessDeniedException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of AccessDeniedException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Rekognition.Model.AccessDeniedException.#ctor(System.Exception)">
            <summary>
            Construct instance of AccessDeniedException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Rekognition.Model.AccessDeniedException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AccessDeniedException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Rekognition.Model.AccessDeniedException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AccessDeniedException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.Rekognition.Model.AgeRange">
            <summary>
            Structure containing the estimated age range, in years, for a face.
            
             
            <para>
            Rekognition estimates an age-range for faces detected in the input image. Estimated
            age ranges can overlap; a face of a 5 year old may have an estimated range of 4-6
            whilst the face of a 6 year old may have an estimated range of 4-8.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.AgeRange.High">
            <summary>
            Gets and sets the property High. 
            <para>
            The highest estimated age.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.AgeRange.Low">
            <summary>
            Gets and sets the property Low. 
            <para>
            The lowest estimated age.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.Beard">
            <summary>
            Indicates whether or not the face has a beard, and the confidence level in the determination.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.Beard.Confidence">
            <summary>
            Gets and sets the property Confidence. 
            <para>
            Level of confidence in the determination.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.Beard.Value">
            <summary>
            Gets and sets the property Value. 
            <para>
            Boolean value that indicates whether the face has beard or not.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.BoundingBox">
            <summary>
            Identifies the bounding box around the object, face or text. The <code>left</code>
            (x-coordinate) and <code>top</code> (y-coordinate) are coordinates representing the
            top and left sides of the bounding box. Note that the upper-left corner of the image
            is the origin (0,0). 
            
             
            <para>
            The <code>top</code> and <code>left</code> values returned are ratios of the overall
            image size. For example, if the input image is 700x200 pixels, and the top-left coordinate
            of the bounding box is 350x50 pixels, the API returns a <code>left</code> value of
            0.5 (350/700) and a <code>top</code> value of 0.25 (50/200).
            </para>
             
            <para>
            The <code>width</code> and <code>height</code> values represent the dimensions of
            the bounding box as a ratio of the overall image dimension. For example, if the input
            image is 700x200 pixels, and the bounding box width is 70 pixels, the width returned
            is 0.1. 
            </para>
             <note> 
            <para>
             The bounding box coordinates can have negative values. For example, if Amazon Rekognition
            is able to detect a face that is at the image edge and is only partially visible,
            the service can return coordinates that are outside the image bounds and, depending
            on the image edge, you might get negative values or values greater than 1 for the
            <code>left</code> or <code>top</code> values. 
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.BoundingBox.Height">
            <summary>
            Gets and sets the property Height. 
            <para>
            Height of the bounding box as a ratio of the overall image height.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.BoundingBox.Left">
            <summary>
            Gets and sets the property Left. 
            <para>
            Left coordinate of the bounding box as a ratio of overall image width.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.BoundingBox.Top">
            <summary>
            Gets and sets the property Top. 
            <para>
            Top coordinate of the bounding box as a ratio of overall image height.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.BoundingBox.Width">
            <summary>
            Gets and sets the property Width. 
            <para>
            Width of the bounding box as a ratio of the overall image width.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.Celebrity">
            <summary>
            Provides information about a celebrity recognized by the operation.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.Celebrity.Face">
            <summary>
            Gets and sets the property Face. 
            <para>
            Provides information about the celebrity's face, such as its location on the image.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.Celebrity.Id">
            <summary>
            Gets and sets the property Id. 
            <para>
            A unique identifier for the celebrity. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.Celebrity.MatchConfidence">
            <summary>
            Gets and sets the property MatchConfidence. 
            <para>
            The confidence, in percentage, that Rekognition has that the recognized face is the
            celebrity.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.Celebrity.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the celebrity.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.Celebrity.Urls">
            <summary>
            Gets and sets the property Urls. 
            <para>
            An array of URLs pointing to additional information about the celebrity. If there
            is no additional information about the celebrity, this list is empty.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.CelebrityDetail">
            <summary>
            Information about a recognized celebrity.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.CelebrityDetail.BoundingBox">
            <summary>
            Gets and sets the property BoundingBox. 
            <para>
            Bounding box around the body of a celebrity.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.CelebrityDetail.Confidence">
            <summary>
            Gets and sets the property Confidence. 
            <para>
            The confidence, in percentage, that Amazon Rekognition has that the recognized face
            is the celebrity. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.CelebrityDetail.Face">
            <summary>
            Gets and sets the property Face. 
            <para>
            Face details for the recognized celebrity.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.CelebrityDetail.Id">
            <summary>
            Gets and sets the property Id. 
            <para>
            The unique identifier for the celebrity. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.CelebrityDetail.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the celebrity.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.CelebrityDetail.Urls">
            <summary>
            Gets and sets the property Urls. 
            <para>
            An array of URLs pointing to additional celebrity information. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.CelebrityRecognition">
            <summary>
            Information about a detected celebrity and the time the celebrity was detected in
            a stored video. For more information, see .
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.CelebrityRecognition.Celebrity">
            <summary>
            Gets and sets the property Celebrity. 
            <para>
            Information about a recognized celebrity.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.CelebrityRecognition.Timestamp">
            <summary>
            Gets and sets the property Timestamp. 
            <para>
            The time, in milliseconds from the start of the video, that the celebrity was recognized.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.ComparedFace">
            <summary>
            Provides face metadata for target image faces that are analysed by <code>CompareFaces</code>
            and <code>RecognizeCelebrities</code>.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.ComparedFace.BoundingBox">
            <summary>
            Gets and sets the property BoundingBox. 
            <para>
            Bounding box of the face.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.ComparedFace.Confidence">
            <summary>
            Gets and sets the property Confidence. 
            <para>
            Level of confidence that what the bounding box contains is a face.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.ComparedFace.Landmarks">
            <summary>
            Gets and sets the property Landmarks. 
            <para>
            An array of facial landmarks.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.ComparedFace.Pose">
            <summary>
            Gets and sets the property Pose. 
            <para>
            Indicates the pose of the face as determined by its pitch, roll, and yaw.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.ComparedFace.Quality">
            <summary>
            Gets and sets the property Quality. 
            <para>
            Identifies face image brightness and sharpness. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.ComparedSourceImageFace">
            <summary>
            Type that describes the face Amazon Rekognition chose to compare with the faces in
            the target. This contains a bounding box for the selected face and confidence level
            that the bounding box contains a face. Note that Amazon Rekognition selects the largest
            face in the source image for this comparison.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.ComparedSourceImageFace.BoundingBox">
            <summary>
            Gets and sets the property BoundingBox. 
            <para>
            Bounding box of the face.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.ComparedSourceImageFace.Confidence">
            <summary>
            Gets and sets the property Confidence. 
            <para>
            Confidence level that the selected bounding box contains a face.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.CompareFacesMatch">
            <summary>
            Provides information about a face in a target image that matches the source image
            face analysed by <code>CompareFaces</code>. The <code>Face</code> property contains
            the bounding box of the face in the target image. The <code>Similarity</code> property
            is the confidence that the source image face matches the face in the bounding box.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.CompareFacesMatch.Face">
            <summary>
            Gets and sets the property Face. 
            <para>
            Provides face metadata (bounding box and confidence that the bounding box actually
            contains a face).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.CompareFacesMatch.Similarity">
            <summary>
            Gets and sets the property Similarity. 
            <para>
            Level of confidence that the faces match.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.CompareFacesRequest">
            <summary>
            Container for the parameters to the CompareFaces operation.
            Compares a face in the <i>source</i> input image with each of the 100 largest faces
            detected in the <i>target</i> input image. 
            
             <note> 
            <para>
             If the source image contains multiple faces, the service detects the largest face
            and compares it with each face detected in the target image. 
            </para>
             </note> 
            <para>
            You pass the input and target images either as base64-encoded image bytes or as a
            references to images in an Amazon S3 bucket. If you use the Amazon CLI to call Amazon
            Rekognition operations, passing image bytes is not supported. The image must be either
            a PNG or JPEG formatted file. 
            </para>
             
            <para>
            In response, the operation returns an array of face matches ordered by similarity
            score in descending order. For each face match, the response provides a bounding box
            of the face, facial landmarks, pose details (pitch, role, and yaw), quality (brightness
            and sharpness), and confidence value (indicating the level of confidence that the
            bounding box contains a face). The response also provides a similarity score, which
            indicates how closely the faces match. 
            </para>
             <note> 
            <para>
            By default, only faces with a similarity score of greater than or equal to 80% are
            returned in the response. You can change this value by specifying the <code>SimilarityThreshold</code>
            parameter.
            </para>
             </note> 
            <para>
             <code>CompareFaces</code> also returns an array of faces that don't match the source
            image. For each face, it returns a bounding box, confidence value, landmarks, pose
            details, and quality. The response also returns information about the face in the
            source image, including the bounding box of the face and confidence value.
            </para>
             
            <para>
            If the image doesn't contain Exif metadata, <code>CompareFaces</code> returns orientation
            information for the source and target images. Use these values to display the images
            with the correct image orientation.
            </para>
             
            <para>
            If no faces are detected in the source or target images, <code>CompareFaces</code>
            returns an <code>InvalidParameterException</code> error. 
            </para>
             <note> 
            <para>
             This is a stateless API operation. That is, data returned by this operation doesn't
            persist.
            </para>
             </note> 
            <para>
            For an example, see <a>faces-compare-images</a>.
            </para>
             
            <para>
            This operation requires permissions to perform the <code>rekognition:CompareFaces</code>
            action.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.CompareFacesRequest.SimilarityThreshold">
            <summary>
            Gets and sets the property SimilarityThreshold. 
            <para>
            The minimum level of confidence in the face matches that a match must meet to be included
            in the <code>FaceMatches</code> array.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.CompareFacesRequest.SourceImage">
            <summary>
            Gets and sets the property SourceImage. 
            <para>
            The input image as base64-encoded bytes or an S3 object. If you use the AWS CLI to
            call Amazon Rekognition operations, passing base64-encoded image bytes is not supported.
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.CompareFacesRequest.TargetImage">
            <summary>
            Gets and sets the property TargetImage. 
            <para>
            The target image as base64-encoded bytes or an S3 object. If you use the AWS CLI to
            call Amazon Rekognition operations, passing base64-encoded image bytes is not supported.
            
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.CompareFacesResponse">
            <summary>
            This is the response object from the CompareFaces operation.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.CompareFacesResponse.FaceMatches">
            <summary>
            Gets and sets the property FaceMatches. 
            <para>
            An array of faces in the target image that match the source image face. Each <code>CompareFacesMatch</code>
            object provides the bounding box, the confidence level that the bounding box contains
            a face, and the similarity score for the face in the bounding box and the face in
            the source image.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.CompareFacesResponse.SourceImageFace">
            <summary>
            Gets and sets the property SourceImageFace. 
            <para>
            The face in the source image that was used for comparison.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.CompareFacesResponse.SourceImageOrientationCorrection">
            <summary>
            Gets and sets the property SourceImageOrientationCorrection. 
            <para>
             The orientation of the source image (counterclockwise direction). If your application
            displays the source image, you can use this value to correct image orientation. The
            bounding box coordinates returned in <code>SourceImageFace</code> represent the location
            of the face before the image orientation is corrected. 
            </para>
             <note> 
            <para>
            If the source image is in .jpeg format, it might contain exchangeable image (Exif)
            metadata that includes the image's orientation. If the Exif metadata for the source
            image populates the orientation field, the value of <code>OrientationCorrection</code>
            is null and the <code>SourceImageFace</code> bounding box coordinates represent the
            location of the face after Exif metadata is used to correct the orientation. Images
            in .png format don't contain Exif metadata.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.CompareFacesResponse.TargetImageOrientationCorrection">
            <summary>
            Gets and sets the property TargetImageOrientationCorrection. 
            <para>
             The orientation of the target image (in counterclockwise direction). If your application
            displays the target image, you can use this value to correct the orientation of the
            image. The bounding box coordinates returned in <code>FaceMatches</code> and <code>UnmatchedFaces</code>
            represent face locations before the image orientation is corrected. 
            </para>
             <note> 
            <para>
            If the target image is in .jpg format, it might contain Exif metadata that includes
            the orientation of the image. If the Exif metadata for the target image populates
            the orientation field, the value of <code>OrientationCorrection</code> is null and
            the bounding box coordinates in <code>FaceMatches</code> and <code>UnmatchedFaces</code>
            represent the location of the face after Exif metadata is used to correct the orientation.
            Images in .png format don't contain Exif metadata.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.CompareFacesResponse.UnmatchedFaces">
            <summary>
            Gets and sets the property UnmatchedFaces. 
            <para>
            An array of faces in the target image that did not match the source image face.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.ContentModerationDetection">
            <summary>
            Information about a moderation label detection in a stored video.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.ContentModerationDetection.ModerationLabel">
            <summary>
            Gets and sets the property ModerationLabel. 
            <para>
            The moderation label detected by in the stored video.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.ContentModerationDetection.Timestamp">
            <summary>
            Gets and sets the property Timestamp. 
            <para>
            Time, in milliseconds from the beginning of the video, that the moderation label was
            detected.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.CreateCollectionRequest">
            <summary>
            Container for the parameters to the CreateCollection operation.
            Creates a collection in an AWS Region. You can add faces to the collection using the
            operation. 
            
             
            <para>
            For example, you might create collections, one for each of your application users.
            A user can then index faces using the <code>IndexFaces</code> operation and persist
            results in a specific collection. Then, a user can search the collection for faces
            in the user-specific container. 
            </para>
             <note> 
            <para>
            Collection names are case-sensitive.
            </para>
             </note> 
            <para>
            This operation requires permissions to perform the <code>rekognition:CreateCollection</code>
            action.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.CreateCollectionRequest.CollectionId">
            <summary>
            Gets and sets the property CollectionId. 
            <para>
            ID for the collection that you are creating.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.CreateCollectionResponse">
            <summary>
            This is the response object from the CreateCollection operation.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.CreateCollectionResponse.CollectionArn">
            <summary>
            Gets and sets the property CollectionArn. 
            <para>
            Amazon Resource Name (ARN) of the collection. You can use this to manage permissions
            on your resources. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.CreateCollectionResponse.FaceModelVersion">
            <summary>
            Gets and sets the property FaceModelVersion. 
            <para>
            Version number of the face detection model associated with the collection you are
            creating.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.CreateCollectionResponse.StatusCode">
            <summary>
            Gets and sets the property StatusCode. 
            <para>
            HTTP status code indicating the result of the operation.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.CreateStreamProcessorRequest">
            <summary>
            Container for the parameters to the CreateStreamProcessor operation.
            Creates an Amazon Rekognition stream processor that you can use to detect and recognize
            faces in a streaming video.
            
             
            <para>
            Rekognition Video is a consumer of live video from Amazon Kinesis Video Streams. Rekognition
            Video sends analysis results to Amazon Kinesis Data Streams.
            </para>
             
            <para>
            You provide as input a Kinesis video stream (<code>Input</code>) and a Kinesis data
            stream (<code>Output</code>) stream. You also specify the face recognition criteria
            in <code>Settings</code>. For example, the collection containing faces that you want
            to recognize. Use <code>Name</code> to assign an identifier for the stream processor.
            You use <code>Name</code> to manage the stream processor. For example, you can start
            processing the source video by calling with the <code>Name</code> field. 
            </para>
             
            <para>
            After you have finished analyzing a streaming video, use to stop processing. You can
            delete the stream processor by calling .
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.CreateStreamProcessorRequest.Input">
            <summary>
            Gets and sets the property Input. 
            <para>
            Kinesis video stream stream that provides the source streaming video. If you are using
            the AWS CLI, the parameter name is <code>StreamProcessorInput</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.CreateStreamProcessorRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            An identifier you assign to the stream processor. You can use <code>Name</code> to
            manage the stream processor. For example, you can get the current status of the stream
            processor by calling . <code>Name</code> is idempotent. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.CreateStreamProcessorRequest.Output">
            <summary>
            Gets and sets the property Output. 
            <para>
            Kinesis data stream stream to which Rekognition Video puts the analysis results. If
            you are using the AWS CLI, the parameter name is <code>StreamProcessorOutput</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.CreateStreamProcessorRequest.RoleArn">
            <summary>
            Gets and sets the property RoleArn. 
            <para>
            ARN of the IAM role that allows access to the stream processor.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.CreateStreamProcessorRequest.Settings">
            <summary>
            Gets and sets the property Settings. 
            <para>
            Face recognition input parameters to be used by the stream processor. Includes the
            collection to use for face recognition and the face attributes to detect.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.CreateStreamProcessorResponse">
            <summary>
            This is the response object from the CreateStreamProcessor operation.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.CreateStreamProcessorResponse.StreamProcessorArn">
            <summary>
            Gets and sets the property StreamProcessorArn. 
            <para>
            ARN for the newly create stream processor.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.DeleteCollectionRequest">
            <summary>
            Container for the parameters to the DeleteCollection operation.
            Deletes the specified collection. Note that this operation removes all faces in the
            collection. For an example, see <a>delete-collection-procedure</a>.
            
             
            <para>
            This operation requires permissions to perform the <code>rekognition:DeleteCollection</code>
            action.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.DeleteCollectionRequest.CollectionId">
            <summary>
            Gets and sets the property CollectionId. 
            <para>
            ID of the collection to delete.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.DeleteCollectionResponse">
            <summary>
            This is the response object from the DeleteCollection operation.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.DeleteCollectionResponse.StatusCode">
            <summary>
            Gets and sets the property StatusCode. 
            <para>
            HTTP status code that indicates the result of the operation.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.DeleteFacesRequest">
            <summary>
            Container for the parameters to the DeleteFaces operation.
            Deletes faces from a collection. You specify a collection ID and an array of face
            IDs to remove from the collection.
            
             
            <para>
            This operation requires permissions to perform the <code>rekognition:DeleteFaces</code>
            action.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.DeleteFacesRequest.CollectionId">
            <summary>
            Gets and sets the property CollectionId. 
            <para>
            Collection from which to remove the specific faces.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.DeleteFacesRequest.FaceIds">
            <summary>
            Gets and sets the property FaceIds. 
            <para>
            An array of face IDs to delete.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.DeleteFacesResponse">
            <summary>
            This is the response object from the DeleteFaces operation.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.DeleteFacesResponse.DeletedFaces">
            <summary>
            Gets and sets the property DeletedFaces. 
            <para>
            An array of strings (face IDs) of the faces that were deleted.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.DeleteStreamProcessorRequest">
            <summary>
            Container for the parameters to the DeleteStreamProcessor operation.
            Deletes the stream processor identified by <code>Name</code>. You assign the value
            for <code>Name</code> when you create the stream processor with . You might not be
            able to use the same name for a stream processor for a few seconds after calling <code>DeleteStreamProcessor</code>.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.DeleteStreamProcessorRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the stream processor you want to delete.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.DeleteStreamProcessorResponse">
            <summary>
            This is the response object from the DeleteStreamProcessor operation.
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.DescribeStreamProcessorRequest">
            <summary>
            Container for the parameters to the DescribeStreamProcessor operation.
            Provides information about a stream processor created by . You can get information
            about the input and output streams, the input parameters for the face recognition
            being performed, and the current status of the stream processor.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.DescribeStreamProcessorRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            Name of the stream processor for which you want information.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.DescribeStreamProcessorResponse">
            <summary>
            This is the response object from the DescribeStreamProcessor operation.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.DescribeStreamProcessorResponse.CreationTimestamp">
            <summary>
            Gets and sets the property CreationTimestamp. 
            <para>
            Date and time the stream processor was created
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.DescribeStreamProcessorResponse.Input">
            <summary>
            Gets and sets the property Input. 
            <para>
            Kinesis video stream that provides the source streaming video.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.DescribeStreamProcessorResponse.LastUpdateTimestamp">
            <summary>
            Gets and sets the property LastUpdateTimestamp. 
            <para>
            The time, in Unix format, the stream processor was last updated. For example, when
            the stream processor moves from a running state to a failed state, or when the user
            starts or stops the stream processor.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.DescribeStreamProcessorResponse.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            Name of the stream processor. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.DescribeStreamProcessorResponse.Output">
            <summary>
            Gets and sets the property Output. 
            <para>
            Kinesis data stream to which Rekognition Video puts the analysis results.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.DescribeStreamProcessorResponse.RoleArn">
            <summary>
            Gets and sets the property RoleArn. 
            <para>
            ARN of the IAM role that allows access to the stream processor.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.DescribeStreamProcessorResponse.Settings">
            <summary>
            Gets and sets the property Settings. 
            <para>
            Face recognition input parameters that are being used by the stream processor. Includes
            the collection to use for face recognition and the face attributes to detect.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.DescribeStreamProcessorResponse.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            Current status of the stream processor.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.DescribeStreamProcessorResponse.StatusMessage">
            <summary>
            Gets and sets the property StatusMessage. 
            <para>
            Detailed status message about the stream processor.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.DescribeStreamProcessorResponse.StreamProcessorArn">
            <summary>
            Gets and sets the property StreamProcessorArn. 
            <para>
            ARN of the stream processor.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.DetectFacesRequest">
            <summary>
            Container for the parameters to the DetectFaces operation.
            Detects faces within an image that is provided as input.
            
             
            <para>
             <code>DetectFaces</code> detects the 100 largest faces in the image. For each face
            detected, the operation returns face details including a bounding box of the face,
            a confidence value (that the bounding box contains a face), and a fixed set of attributes
            such as facial landmarks (for example, coordinates of eye and mouth), gender, presence
            of beard, sunglasses, etc. 
            </para>
             
            <para>
            The face-detection algorithm is most effective on frontal faces. For non-frontal or
            obscured faces, the algorithm may not detect the faces or might detect faces with
            lower confidence. 
            </para>
             
            <para>
            You pass the input image either as base64-encoded image bytes or as a reference to
            an image in an Amazon S3 bucket. If you use the Amazon CLI to call Amazon Rekognition
            operations, passing image bytes is not supported. The image must be either a PNG or
            JPEG formatted file. 
            </para>
             <note> 
            <para>
            This is a stateless API operation. That is, the operation does not persist any data.
            </para>
             </note> 
            <para>
            For an example, see <a>procedure-detecting-faces-in-images</a>.
            </para>
             
            <para>
            This operation requires permissions to perform the <code>rekognition:DetectFaces</code>
            action. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.DetectFacesRequest.Attributes">
            <summary>
            Gets and sets the property Attributes. 
            <para>
            An array of facial attributes you want to be returned. This can be the default list
            of attributes or all attributes. If you don't specify a value for <code>Attributes</code>
            or if you specify <code>["DEFAULT"]</code>, the API returns the following subset of
            facial attributes: <code>BoundingBox</code>, <code>Confidence</code>, <code>Pose</code>,
            <code>Quality</code> and <code>Landmarks</code>. If you provide <code>["ALL"]</code>,
            all facial attributes are returned but the operation will take longer to complete.
            </para>
             
            <para>
            If you provide both, <code>["ALL", "DEFAULT"]</code>, the service uses a logical AND
            operator to determine which attributes to return (in this case, all attributes). 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.DetectFacesRequest.Image">
            <summary>
            Gets and sets the property Image. 
            <para>
            The input image as base64-encoded bytes or an S3 object. If you use the AWS CLI to
            call Amazon Rekognition operations, passing base64-encoded image bytes is not supported.
            
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.DetectFacesResponse">
            <summary>
            This is the response object from the DetectFaces operation.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.DetectFacesResponse.FaceDetails">
            <summary>
            Gets and sets the property FaceDetails. 
            <para>
            Details of each face found in the image. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.DetectFacesResponse.OrientationCorrection">
            <summary>
            Gets and sets the property OrientationCorrection. 
            <para>
             The orientation of the input image (counter-clockwise direction). If your application
            displays the image, you can use this value to correct image orientation. The bounding
            box coordinates returned in <code>FaceDetails</code> represent face locations before
            the image orientation is corrected. 
            </para>
             <note> 
            <para>
            If the input image is in .jpeg format, it might contain exchangeable image (Exif)
            metadata that includes the image's orientation. If so, and the Exif metadata for the
            input image populates the orientation field, the value of <code>OrientationCorrection</code>
            is null and the <code>FaceDetails</code> bounding box coordinates represent face locations
            after Exif metadata is used to correct the image orientation. Images in .png format
            don't contain Exif metadata.
            </para>
             </note>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.DetectLabelsRequest">
            <summary>
            Container for the parameters to the DetectLabels operation.
            Detects instances of real-world entities within an image (JPEG or PNG) provided as
            input. This includes objects like flower, tree, and table; events like wedding, graduation,
            and birthday party; and concepts like landscape, evening, and nature. For an example,
            see <a>images-s3</a>.
            
             <note> 
            <para>
             <code>DetectLabels</code> does not support the detection of activities. However,
            activity detection is supported for label detection in videos. For more information,
            see .
            </para>
             </note> 
            <para>
            You pass the input image as base64-encoded image bytes or as a reference to an image
            in an Amazon S3 bucket. If you use the Amazon CLI to call Amazon Rekognition operations,
            passing image bytes is not supported. The image must be either a PNG or JPEG formatted
            file. 
            </para>
             
            <para>
             For each object, scene, and concept the API returns one or more labels. Each label
            provides the object name, and the level of confidence that the image contains the
            object. For example, suppose the input image has a lighthouse, the sea, and a rock.
            The response will include all three labels, one for each object. 
            </para>
             
            <para>
             <code>{Name: lighthouse, Confidence: 98.4629}</code> 
            </para>
             
            <para>
             <code>{Name: rock,Confidence: 79.2097}</code> 
            </para>
             
            <para>
             <code> {Name: sea,Confidence: 75.061}</code> 
            </para>
             
            <para>
             In the preceding example, the operation returns one label for each of the three objects.
            The operation can also return multiple labels for the same object in the image. For
            example, if the input image shows a flower (for example, a tulip), the operation might
            return the following three labels. 
            </para>
             
            <para>
             <code>{Name: flower,Confidence: 99.0562}</code> 
            </para>
             
            <para>
             <code>{Name: plant,Confidence: 99.0562}</code> 
            </para>
             
            <para>
             <code>{Name: tulip,Confidence: 99.0562}</code> 
            </para>
             
            <para>
            In this example, the detection algorithm more precisely identifies the flower as a
            tulip.
            </para>
             
            <para>
            In response, the API returns an array of labels. In addition, the response also includes
            the orientation correction. Optionally, you can specify <code>MinConfidence</code>
            to control the confidence threshold for the labels returned. The default is 50%. You
            can also add the <code>MaxLabels</code> parameter to limit the number of labels returned.
            
            </para>
             <note> 
            <para>
            If the object detected is a person, the operation doesn't provide the same facial
            details that the <a>DetectFaces</a> operation provides.
            </para>
             </note> 
            <para>
            This is a stateless API operation. That is, the operation does not persist any data.
            </para>
             
            <para>
            This operation requires permissions to perform the <code>rekognition:DetectLabels</code>
            action. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.DetectLabelsRequest.Image">
            <summary>
            Gets and sets the property Image. 
            <para>
            The input image as base64-encoded bytes or an S3 object. If you use the AWS CLI to
            call Amazon Rekognition operations, passing base64-encoded image bytes is not supported.
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.DetectLabelsRequest.MaxLabels">
            <summary>
            Gets and sets the property MaxLabels. 
            <para>
            Maximum number of labels you want the service to return in the response. The service
            returns the specified number of highest confidence labels. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.DetectLabelsRequest.MinConfidence">
            <summary>
            Gets and sets the property MinConfidence. 
            <para>
            Specifies the minimum confidence level for the labels to return. Amazon Rekognition
            doesn't return any labels with confidence lower than this specified value.
            </para>
             
            <para>
            If <code>MinConfidence</code> is not specified, the operation returns labels with
            a confidence values greater than or equal to 50 percent.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.DetectLabelsResponse">
            <summary>
            This is the response object from the DetectLabels operation.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.DetectLabelsResponse.Labels">
            <summary>
            Gets and sets the property Labels. 
            <para>
            An array of labels for the real-world objects detected. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.DetectLabelsResponse.OrientationCorrection">
            <summary>
            Gets and sets the property OrientationCorrection. 
            <para>
             The orientation of the input image (counter-clockwise direction). If your application
            displays the image, you can use this value to correct the orientation. If Amazon Rekognition
            detects that the input image was rotated (for example, by 90 degrees), it first corrects
            the orientation before detecting the labels. 
            </para>
             <note> 
            <para>
            If the input image Exif metadata populates the orientation field, Amazon Rekognition
            does not perform orientation correction and the value of OrientationCorrection will
            be null.
            </para>
             </note>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.DetectModerationLabelsRequest">
            <summary>
            Container for the parameters to the DetectModerationLabels operation.
            Detects explicit or suggestive adult content in a specified JPEG or PNG format image.
            Use <code>DetectModerationLabels</code> to moderate images depending on your requirements.
            For example, you might want to filter images that contain nudity, but not images containing
            suggestive content.
            
             
            <para>
            To filter images, use the labels returned by <code>DetectModerationLabels</code> to
            determine which types of content are appropriate. For information about moderation
            labels, see <a>moderation</a>.
            </para>
             
            <para>
            You pass the input image either as base64-encoded image bytes or as a reference to
            an image in an Amazon S3 bucket. If you use the Amazon CLI to call Amazon Rekognition
            operations, passing image bytes is not supported. The image must be either a PNG or
            JPEG formatted file. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.DetectModerationLabelsRequest.Image">
            <summary>
            Gets and sets the property Image. 
            <para>
            The input image as base64-encoded bytes or an S3 object. If you use the AWS CLI to
            call Amazon Rekognition operations, passing base64-encoded image bytes is not supported.
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.DetectModerationLabelsRequest.MinConfidence">
            <summary>
            Gets and sets the property MinConfidence. 
            <para>
            Specifies the minimum confidence level for the labels to return. Amazon Rekognition
            doesn't return any labels with a confidence level lower than this specified value.
            </para>
             
            <para>
            If you don't specify <code>MinConfidence</code>, the operation returns labels with
            confidence values greater than or equal to 50 percent.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.DetectModerationLabelsResponse">
            <summary>
            This is the response object from the DetectModerationLabels operation.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.DetectModerationLabelsResponse.ModerationLabels">
            <summary>
            Gets and sets the property ModerationLabels. 
            <para>
            Array of detected Moderation labels and the time, in millseconds from the start of
            the video, they were detected.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.DetectTextRequest">
            <summary>
            Container for the parameters to the DetectText operation.
            Detects text in the input image and converts it into machine-readable text.
            
             
            <para>
            Pass the input image as base64-encoded image bytes or as a reference to an image in
            an Amazon S3 bucket. If you use the AWS CLI to call Amazon Rekognition operations,
            you must pass it as a reference to an image in an Amazon S3 bucket. For the AWS CLI,
            passing image bytes is not supported. The image must be either a .png or .jpeg formatted
            file. 
            </para>
             
            <para>
            The <code>DetectText</code> operation returns text in an array of elements, <code>TextDetections</code>.
            Each <code>TextDetection</code> element provides information about a single word or
            line of text that was detected in the image. 
            </para>
             
            <para>
            A word is one or more ISO basic latin script characters that are not separated by
            spaces. <code>DetectText</code> can detect up to 50 words in an image.
            </para>
             
            <para>
            A line is a string of equally spaced words. A line isn't necessarily a complete sentence.
            For example, a driver's license number is detected as a line. A line ends when there
            is no aligned text after it. Also, a line ends when there is a large gap between words,
            relative to the length of the words. This means, depending on the gap between words,
            Amazon Rekognition may detect multiple lines in text aligned in the same direction.
            Periods don't represent the end of a line. If a sentence spans multiple lines, the
            <code>DetectText</code> operation returns multiple lines.
            </para>
             
            <para>
            To determine whether a <code>TextDetection</code> element is a line of text or a word,
            use the <code>TextDetection</code> object <code>Type</code> field. 
            </para>
             
            <para>
            To be detected, text must be within +/- 30 degrees orientation of the horizontal axis.
            </para>
             
            <para>
            For more information, see <a>text-detection</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.DetectTextRequest.Image">
            <summary>
            Gets and sets the property Image. 
            <para>
            The input image as base64-encoded bytes or an Amazon S3 object. If you use the AWS
            CLI to call Amazon Rekognition operations, you can't pass image bytes. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.DetectTextResponse">
            <summary>
            This is the response object from the DetectText operation.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.DetectTextResponse.TextDetections">
            <summary>
            Gets and sets the property TextDetections. 
            <para>
            An array of text that was detected in the input image.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.Emotion">
            <summary>
            The emotions detected on the face, and the confidence level in the determination.
            For example, HAPPY, SAD, and ANGRY.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.Emotion.Confidence">
            <summary>
            Gets and sets the property Confidence. 
            <para>
            Level of confidence in the determination.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.Emotion.Type">
            <summary>
            Gets and sets the property Type. 
            <para>
            Type of emotion detected.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.Eyeglasses">
            <summary>
            Indicates whether or not the face is wearing eye glasses, and the confidence level
            in the determination.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.Eyeglasses.Confidence">
            <summary>
            Gets and sets the property Confidence. 
            <para>
            Level of confidence in the determination.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.Eyeglasses.Value">
            <summary>
            Gets and sets the property Value. 
            <para>
            Boolean value that indicates whether the face is wearing eye glasses or not.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.EyeOpen">
            <summary>
            Indicates whether or not the eyes on the face are open, and the confidence level in
            the determination.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.EyeOpen.Confidence">
            <summary>
            Gets and sets the property Confidence. 
            <para>
            Level of confidence in the determination.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.EyeOpen.Value">
            <summary>
            Gets and sets the property Value. 
            <para>
            Boolean value that indicates whether the eyes on the face are open.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.Face">
            <summary>
            Describes the face properties such as the bounding box, face ID, image ID of the input
            image, and external image ID that you assigned.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.Face.BoundingBox">
            <summary>
            Gets and sets the property BoundingBox. 
            <para>
            Bounding box of the face.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.Face.Confidence">
            <summary>
            Gets and sets the property Confidence. 
            <para>
            Confidence level that the bounding box contains a face (and not a different object
            such as a tree).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.Face.ExternalImageId">
            <summary>
            Gets and sets the property ExternalImageId. 
            <para>
            Identifier that you assign to all the faces in the input image.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.Face.FaceId">
            <summary>
            Gets and sets the property FaceId. 
            <para>
            Unique identifier that Amazon Rekognition assigns to the face.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.Face.ImageId">
            <summary>
            Gets and sets the property ImageId. 
            <para>
            Unique identifier that Amazon Rekognition assigns to the input image.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.FaceDetail">
            <summary>
            Structure containing attributes of the face that the algorithm detected.
            
             
            <para>
            A <code>FaceDetail</code> object contains either the default facial attributes or
            all facial attributes. The default attributes are <code>BoundingBox</code>, <code>Confidence</code>,
            <code>Landmarks</code>, <code>Pose</code>, and <code>Quality</code>.
            </para>
             
            <para>
             is the only Rekognition Video stored video operation that can return a <code>FaceDetail</code>
            object with all attributes. To specify which attributes to return, use the <code>FaceAttributes</code>
            input parameter for . The following Rekognition Video operations return only the default
            attributes. The corresponding Start operations don't have a <code>FaceAttributes</code>
            input parameter.
            </para>
             <ul> <li> 
            <para>
            GetCelebrityRecognition
            </para>
             </li> <li> 
            <para>
            GetPersonTracking
            </para>
             </li> <li> 
            <para>
            GetFaceSearch
            </para>
             </li> </ul> 
            <para>
            The Rekognition Image and operations can return all facial attributes. To specify
            which attributes to return, use the <code>Attributes</code> input parameter for <code>DetectFaces</code>.
            For <code>IndexFaces</code>, use the <code>DetectAttributes</code> input parameter.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.FaceDetail.AgeRange">
            <summary>
            Gets and sets the property AgeRange. 
            <para>
            The estimated age range, in years, for the face. Low represents the lowest estimated
            age and High represents the highest estimated age.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.FaceDetail.Beard">
            <summary>
            Gets and sets the property Beard. 
            <para>
            Indicates whether or not the face has a beard, and the confidence level in the determination.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.FaceDetail.BoundingBox">
            <summary>
            Gets and sets the property BoundingBox. 
            <para>
            Bounding box of the face. Default attribute.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.FaceDetail.Confidence">
            <summary>
            Gets and sets the property Confidence. 
            <para>
            Confidence level that the bounding box contains a face (and not a different object
            such as a tree). Default attribute.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.FaceDetail.Emotions">
            <summary>
            Gets and sets the property Emotions. 
            <para>
            The emotions detected on the face, and the confidence level in the determination.
            For example, HAPPY, SAD, and ANGRY. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.FaceDetail.Eyeglasses">
            <summary>
            Gets and sets the property Eyeglasses. 
            <para>
            Indicates whether or not the face is wearing eye glasses, and the confidence level
            in the determination.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.FaceDetail.EyesOpen">
            <summary>
            Gets and sets the property EyesOpen. 
            <para>
            Indicates whether or not the eyes on the face are open, and the confidence level in
            the determination.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.FaceDetail.Gender">
            <summary>
            Gets and sets the property Gender. 
            <para>
            Gender of the face and the confidence level in the determination.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.FaceDetail.Landmarks">
            <summary>
            Gets and sets the property Landmarks. 
            <para>
            Indicates the location of landmarks on the face. Default attribute.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.FaceDetail.MouthOpen">
            <summary>
            Gets and sets the property MouthOpen. 
            <para>
            Indicates whether or not the mouth on the face is open, and the confidence level in
            the determination.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.FaceDetail.Mustache">
            <summary>
            Gets and sets the property Mustache. 
            <para>
            Indicates whether or not the face has a mustache, and the confidence level in the
            determination.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.FaceDetail.Pose">
            <summary>
            Gets and sets the property Pose. 
            <para>
            Indicates the pose of the face as determined by its pitch, roll, and yaw. Default
            attribute.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.FaceDetail.Quality">
            <summary>
            Gets and sets the property Quality. 
            <para>
            Identifies image brightness and sharpness. Default attribute.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.FaceDetail.Smile">
            <summary>
            Gets and sets the property Smile. 
            <para>
            Indicates whether or not the face is smiling, and the confidence level in the determination.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.FaceDetail.Sunglasses">
            <summary>
            Gets and sets the property Sunglasses. 
            <para>
            Indicates whether or not the face is wearing sunglasses, and the confidence level
            in the determination.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.FaceDetection">
            <summary>
            Information about a face detected in a video analysis request and the time the face
            was detected in the video.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.FaceDetection.Face">
            <summary>
            Gets and sets the property Face. 
            <para>
            The face properties for the detected face.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.FaceDetection.Timestamp">
            <summary>
            Gets and sets the property Timestamp. 
            <para>
            Time, in milliseconds from the start of the video, that the face was detected.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.FaceMatch">
            <summary>
            Provides face metadata. In addition, it also provides the confidence in the match
            of this face with the input face.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.FaceMatch.Face">
            <summary>
            Gets and sets the property Face. 
            <para>
            Describes the face properties such as the bounding box, face ID, image ID of the source
            image, and external image ID that you assigned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.FaceMatch.Similarity">
            <summary>
            Gets and sets the property Similarity. 
            <para>
            Confidence in the match of this face with the input face.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.FaceRecord">
            <summary>
            Object containing both the face metadata (stored in the back-end database) and facial
            attributes that are detected but aren't stored in the database.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.FaceRecord.Face">
            <summary>
            Gets and sets the property Face. 
            <para>
            Describes the face properties such as the bounding box, face ID, image ID of the input
            image, and external image ID that you assigned. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.FaceRecord.FaceDetail">
            <summary>
            Gets and sets the property FaceDetail. 
            <para>
            Structure containing attributes of the face that the algorithm detected.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.FaceSearchSettings">
            <summary>
            Input face recognition parameters for an Amazon Rekognition stream processor. <code>FaceRecognitionSettings</code>
            is a request parameter for .
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.FaceSearchSettings.CollectionId">
            <summary>
            Gets and sets the property CollectionId. 
            <para>
            The ID of a collection that contains faces that you want to search for.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.FaceSearchSettings.FaceMatchThreshold">
            <summary>
            Gets and sets the property FaceMatchThreshold. 
            <para>
            Minimum face match confidence score that must be met to return a result for a recognized
            face. Default is 70. 0 is the lowest confidence. 100 is the highest confidence.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.Gender">
            <summary>
            Gender of the face and the confidence level in the determination.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.Gender.Confidence">
            <summary>
            Gets and sets the property Confidence. 
            <para>
            Level of confidence in the determination.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.Gender.Value">
            <summary>
            Gets and sets the property Value. 
            <para>
            Gender of the face.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.Geometry">
            <summary>
            Information about where text detected by is located on an image.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.Geometry.BoundingBox">
            <summary>
            Gets and sets the property BoundingBox. 
            <para>
            An axis-aligned coarse representation of the detected text's location on the image.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.Geometry.Polygon">
            <summary>
            Gets and sets the property Polygon. 
            <para>
            Within the bounding box, a fine-grained polygon around the detected text.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.GetCelebrityInfoRequest">
            <summary>
            Container for the parameters to the GetCelebrityInfo operation.
            Gets the name and additional information about a celebrity based on his or her Rekognition
            ID. The additional information is returned as an array of URLs. If there is no additional
            information about the celebrity, this list is empty. For more information, see <a>get-celebrity-info-procedure</a>.
            
             
            <para>
            This operation requires permissions to perform the <code>rekognition:GetCelebrityInfo</code>
            action. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.GetCelebrityInfoRequest.Id">
            <summary>
            Gets and sets the property Id. 
            <para>
            The ID for the celebrity. You get the celebrity ID from a call to the operation, which
            recognizes celebrities in an image. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.GetCelebrityInfoResponse">
            <summary>
            This is the response object from the GetCelebrityInfo operation.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.GetCelebrityInfoResponse.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the celebrity.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.GetCelebrityInfoResponse.Urls">
            <summary>
            Gets and sets the property Urls. 
            <para>
            An array of URLs pointing to additional celebrity information. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.GetCelebrityRecognitionRequest">
            <summary>
            Container for the parameters to the GetCelebrityRecognition operation.
            Gets the celebrity recognition results for a Rekognition Video analysis started by
            .
            
             
            <para>
            Celebrity recognition in a video is an asynchronous operation. Analysis is started
            by a call to which returns a job identifier (<code>JobId</code>). When the celebrity
            recognition operation finishes, Rekognition Video publishes a completion status to
            the Amazon Simple Notification Service topic registered in the initial call to <code>StartCelebrityRecognition</code>.
            To get the results of the celebrity recognition analysis, first check that the status
            value published to the Amazon SNS topic is <code>SUCCEEDED</code>. If so, call <code>GetCelebrityDetection</code>
            and pass the job identifier (<code>JobId</code>) from the initial call to <code>StartCelebrityDetection</code>.
            For more information, see <a>video</a>.
            </para>
             
            <para>
             <code>GetCelebrityRecognition</code> returns detected celebrities and the time(s)
            they are detected in an array (<code>Celebrities</code>) of objects. Each <code>CelebrityRecognition</code>
            contains information about the celebrity in a object and the time, <code>Timestamp</code>,
            the celebrity was detected. 
            </para>
             <note> 
            <para>
             <code>GetCelebrityRecognition</code> only returns the default facial attributes (<code>BoundingBox</code>,
            <code>Confidence</code>, <code>Landmarks</code>, <code>Pose</code>, and <code>Quality</code>).
            The other facial attributes listed in the <code>Face</code> object of the following
            response syntax are not returned. For more information, see . 
            </para>
             </note> 
            <para>
            By default, the <code>Celebrities</code> array is sorted by time (milliseconds from
            the start of the video). You can also sort the array by celebrity by specifying the
            value <code>ID</code> in the <code>SortBy</code> input parameter.
            </para>
             
            <para>
            The <code>CelebrityDetail</code> object includes the celebrity identifer and additional
            information urls. If you don't store the additional information urls, you can get
            them later by calling with the celebrity identifer.
            </para>
             
            <para>
            No information is returned for faces not recognized as celebrities.
            </para>
             
            <para>
            Use MaxResults parameter to limit the number of labels returned. If there are more
            results than specified in <code>MaxResults</code>, the value of <code>NextToken</code>
            in the operation response contains a pagination token for getting the next set of
            results. To get the next page of results, call <code>GetCelebrityDetection</code>
            and populate the <code>NextToken</code> request parameter with the token value returned
            from the previous call to <code>GetCelebrityRecognition</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.GetCelebrityRecognitionRequest.JobId">
            <summary>
            Gets and sets the property JobId. 
            <para>
            Job identifier for the required celebrity recognition analysis. You can get the job
            identifer from a call to <code>StartCelebrityRecognition</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.GetCelebrityRecognitionRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            Maximum number of results to return per paginated call. The largest value you can
            specify is 1000. If you specify a value greater than 1000, a maximum of 1000 results
            is returned. The default value is 1000.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.GetCelebrityRecognitionRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            If the previous response was incomplete (because there is more recognized celebrities
            to retrieve), Rekognition Video returns a pagination token in the response. You can
            use this pagination token to retrieve the next set of celebrities. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.GetCelebrityRecognitionRequest.SortBy">
            <summary>
            Gets and sets the property SortBy. 
            <para>
            Sort to use for celebrities returned in <code>Celebrities</code> field. Specify <code>ID</code>
            to sort by the celebrity identifier, specify <code>TIMESTAMP</code> to sort by the
            time the celebrity was recognized.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.GetCelebrityRecognitionResponse">
            <summary>
            This is the response object from the GetCelebrityRecognition operation.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.GetCelebrityRecognitionResponse.Celebrities">
            <summary>
            Gets and sets the property Celebrities. 
            <para>
            Array of celebrities recognized in the video.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.GetCelebrityRecognitionResponse.JobStatus">
            <summary>
            Gets and sets the property JobStatus. 
            <para>
            The current status of the celebrity recognition job.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.GetCelebrityRecognitionResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            If the response is truncated, Rekognition Video returns this token that you can use
            in the subsequent request to retrieve the next set of celebrities.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.GetCelebrityRecognitionResponse.StatusMessage">
            <summary>
            Gets and sets the property StatusMessage. 
            <para>
            If the job fails, <code>StatusMessage</code> provides a descriptive error message.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.GetCelebrityRecognitionResponse.VideoMetadata">
            <summary>
            Gets and sets the property VideoMetadata. 
            <para>
            Information about a video that Rekognition Video analyzed. <code>Videometadata</code>
            is returned in every page of paginated responses from a Rekognition Video operation.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.GetContentModerationRequest">
            <summary>
            Container for the parameters to the GetContentModeration operation.
            Gets the content moderation analysis results for a Rekognition Video analysis started
            by .
            
             
            <para>
            Content moderation analysis of a video is an asynchronous operation. You start analysis
            by calling . which returns a job identifier (<code>JobId</code>). When analysis finishes,
            Rekognition Video publishes a completion status to the Amazon Simple Notification
            Service topic registered in the initial call to <code>StartContentModeration</code>.
            To get the results of the content moderation analysis, first check that the status
            value published to the Amazon SNS topic is <code>SUCCEEDED</code>. If so, call <code>GetCelebrityDetection</code>
            and pass the job identifier (<code>JobId</code>) from the initial call to <code>StartCelebrityDetection</code>.
            For more information, see <a>video</a>. 
            </para>
             
            <para>
             <code>GetContentModeration</code> returns detected content moderation labels, and
            the time they are detected, in an array, <code>ModerationLabels</code>, of objects.
            
            </para>
             
            <para>
            By default, the moderated labels are returned sorted by time, in milliseconds from
            the start of the video. You can also sort them by moderated label by specifying <code>NAME</code>
            for the <code>SortBy</code> input parameter. 
            </para>
             
            <para>
            Since video analysis can return a large number of results, use the <code>MaxResults</code>
            parameter to limit the number of labels returned in a single call to <code>GetContentModeration</code>.
            If there are more results than specified in <code>MaxResults</code>, the value of
            <code>NextToken</code> in the operation response contains a pagination token for getting
            the next set of results. To get the next page of results, call <code>GetContentModeration</code>
            and populate the <code>NextToken</code> request parameter with the value of <code>NextToken</code>
            returned from the previous call to <code>GetContentModeration</code>.
            </para>
             
            <para>
            For more information, see <a>moderation</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.GetContentModerationRequest.JobId">
            <summary>
            Gets and sets the property JobId. 
            <para>
            The identifier for the content moderation job. Use <code>JobId</code> to identify
            the job in a subsequent call to <code>GetContentModeration</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.GetContentModerationRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            Maximum number of results to return per paginated call. The largest value you can
            specify is 1000. If you specify a value greater than 1000, a maximum of 1000 results
            is returned. The default value is 1000.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.GetContentModerationRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            If the previous response was incomplete (because there is more data to retrieve),
            Amazon Rekognition returns a pagination token in the response. You can use this pagination
            token to retrieve the next set of content moderation labels.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.GetContentModerationRequest.SortBy">
            <summary>
            Gets and sets the property SortBy. 
            <para>
            Sort to use for elements in the <code>ModerationLabelDetections</code> array. Use
            <code>TIMESTAMP</code> to sort array elements by the time labels are detected. Use
            <code>NAME</code> to alphabetically group elements for a label together. Within each
            label group, the array element are sorted by detection confidence. The default sort
            is by <code>TIMESTAMP</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.GetContentModerationResponse">
            <summary>
            This is the response object from the GetContentModeration operation.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.GetContentModerationResponse.JobStatus">
            <summary>
            Gets and sets the property JobStatus. 
            <para>
            The current status of the content moderation job.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.GetContentModerationResponse.ModerationLabels">
            <summary>
            Gets and sets the property ModerationLabels. 
            <para>
            The detected moderation labels and the time(s) they were detected.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.GetContentModerationResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            If the response is truncated, Rekognition Video returns this token that you can use
            in the subsequent request to retrieve the next set of moderation labels. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.GetContentModerationResponse.StatusMessage">
            <summary>
            Gets and sets the property StatusMessage. 
            <para>
            If the job fails, <code>StatusMessage</code> provides a descriptive error message.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.GetContentModerationResponse.VideoMetadata">
            <summary>
            Gets and sets the property VideoMetadata. 
            <para>
            Information about a video that Amazon Rekognition analyzed. <code>Videometadata</code>
            is returned in every page of paginated responses from <code>GetContentModeration</code>.
            
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.GetFaceDetectionRequest">
            <summary>
            Container for the parameters to the GetFaceDetection operation.
            Gets face detection results for a Rekognition Video analysis started by .
            
             
            <para>
            Face detection with Rekognition Video is an asynchronous operation. You start face
            detection by calling which returns a job identifier (<code>JobId</code>). When the
            face detection operation finishes, Rekognition Video publishes a completion status
            to the Amazon Simple Notification Service topic registered in the initial call to
            <code>StartFaceDetection</code>. To get the results of the face detection operation,
            first check that the status value published to the Amazon SNS topic is <code>SUCCEEDED</code>.
            If so, call and pass the job identifier (<code>JobId</code>) from the initial call
            to <code>StartFaceDetection</code>.
            </para>
             
            <para>
             <code>GetFaceDetection</code> returns an array of detected faces (<code>Faces</code>)
            sorted by the time the faces were detected. 
            </para>
             
            <para>
            Use MaxResults parameter to limit the number of labels returned. If there are more
            results than specified in <code>MaxResults</code>, the value of <code>NextToken</code>
            in the operation response contains a pagination token for getting the next set of
            results. To get the next page of results, call <code>GetFaceDetection</code> and populate
            the <code>NextToken</code> request parameter with the token value returned from the
            previous call to <code>GetFaceDetection</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.GetFaceDetectionRequest.JobId">
            <summary>
            Gets and sets the property JobId. 
            <para>
            Unique identifier for the face detection job. The <code>JobId</code> is returned from
            <code>StartFaceDetection</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.GetFaceDetectionRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            Maximum number of results to return per paginated call. The largest value you can
            specify is 1000. If you specify a value greater than 1000, a maximum of 1000 results
            is returned. The default value is 1000.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.GetFaceDetectionRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            If the previous response was incomplete (because there are more faces to retrieve),
            Rekognition Video returns a pagination token in the response. You can use this pagination
            token to retrieve the next set of faces.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.GetFaceDetectionResponse">
            <summary>
            This is the response object from the GetFaceDetection operation.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.GetFaceDetectionResponse.Faces">
            <summary>
            Gets and sets the property Faces. 
            <para>
            An array of faces detected in the video. Each element contains a detected face's details
            and the time, in milliseconds from the start of the video, the face was detected.
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.GetFaceDetectionResponse.JobStatus">
            <summary>
            Gets and sets the property JobStatus. 
            <para>
            The current status of the face detection job.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.GetFaceDetectionResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            If the response is truncated, Amazon Rekognition returns this token that you can use
            in the subsequent request to retrieve the next set of faces. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.GetFaceDetectionResponse.StatusMessage">
            <summary>
            Gets and sets the property StatusMessage. 
            <para>
            If the job fails, <code>StatusMessage</code> provides a descriptive error message.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.GetFaceDetectionResponse.VideoMetadata">
            <summary>
            Gets and sets the property VideoMetadata. 
            <para>
            Information about a video that Rekognition Video analyzed. <code>Videometadata</code>
            is returned in every page of paginated responses from a Amazon Rekognition video operation.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.GetFaceSearchRequest">
            <summary>
            Container for the parameters to the GetFaceSearch operation.
            Gets the face search results for Rekognition Video face search started by . The search
            returns faces in a collection that match the faces of persons detected in a video.
            It also includes the time(s) that faces are matched in the video.
            
             
            <para>
            Face search in a video is an asynchronous operation. You start face search by calling
            to which returns a job identifier (<code>JobId</code>). When the search operation
            finishes, Rekognition Video publishes a completion status to the Amazon Simple Notification
            Service topic registered in the initial call to <code>StartFaceSearch</code>. To get
            the search results, first check that the status value published to the Amazon SNS
            topic is <code>SUCCEEDED</code>. If so, call <code>GetFaceSearch</code> and pass the
            job identifier (<code>JobId</code>) from the initial call to <code>StartFaceSearch</code>.
            For more information, see <a>collections</a>.
            </para>
             
            <para>
            The search results are retured in an array, <code>Persons</code>, of objects. Each<code>PersonMatch</code>
            element contains details about the matching faces in the input collection, person
            information (facial attributes, bounding boxes, and person identifer) for the matched
            person, and the time the person was matched in the video.
            </para>
             <note> 
            <para>
             <code>GetFaceSearch</code> only returns the default facial attributes (<code>BoundingBox</code>,
            <code>Confidence</code>, <code>Landmarks</code>, <code>Pose</code>, and <code>Quality</code>).
            The other facial attributes listed in the <code>Face</code> object of the following
            response syntax are not returned. For more information, see . 
            </para>
             </note> 
            <para>
            By default, the <code>Persons</code> array is sorted by the time, in milliseconds
            from the start of the video, persons are matched. You can also sort by persons by
            specifying <code>INDEX</code> for the <code>SORTBY</code> input parameter.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.GetFaceSearchRequest.JobId">
            <summary>
            Gets and sets the property JobId. 
            <para>
            The job identifer for the search request. You get the job identifier from an initial
            call to <code>StartFaceSearch</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.GetFaceSearchRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            Maximum number of results to return per paginated call. The largest value you can
            specify is 1000. If you specify a value greater than 1000, a maximum of 1000 results
            is returned. The default value is 1000.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.GetFaceSearchRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            If the previous response was incomplete (because there is more search results to retrieve),
            Rekognition Video returns a pagination token in the response. You can use this pagination
            token to retrieve the next set of search results. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.GetFaceSearchRequest.SortBy">
            <summary>
            Gets and sets the property SortBy. 
            <para>
            Sort to use for grouping faces in the response. Use <code>TIMESTAMP</code> to group
            faces by the time that they are recognized. Use <code>INDEX</code> to sort by recognized
            faces. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.GetFaceSearchResponse">
            <summary>
            This is the response object from the GetFaceSearch operation.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.GetFaceSearchResponse.JobStatus">
            <summary>
            Gets and sets the property JobStatus. 
            <para>
            The current status of the face search job.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.GetFaceSearchResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            If the response is truncated, Rekognition Video returns this token that you can use
            in the subsequent request to retrieve the next set of search results. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.GetFaceSearchResponse.Persons">
            <summary>
            Gets and sets the property Persons. 
            <para>
            An array of persons, , in the video whose face(s) match the face(s) in an Amazon Rekognition
            collection. It also includes time information for when persons are matched in the
            video. You specify the input collection in an initial call to <code>StartFaceSearch</code>.
            Each <code>Persons</code> element includes a time the person was matched, face match
            details (<code>FaceMatches</code>) for matching faces in the collection, and person
            information (<code>Person</code>) for the matched person. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.GetFaceSearchResponse.StatusMessage">
            <summary>
            Gets and sets the property StatusMessage. 
            <para>
            If the job fails, <code>StatusMessage</code> provides a descriptive error message.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.GetFaceSearchResponse.VideoMetadata">
            <summary>
            Gets and sets the property VideoMetadata. 
            <para>
            Information about a video that Amazon Rekognition analyzed. <code>Videometadata</code>
            is returned in every page of paginated responses from a Rekognition Video operation.
            
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.GetLabelDetectionRequest">
            <summary>
            Container for the parameters to the GetLabelDetection operation.
            Gets the label detection results of a Rekognition Video analysis started by . 
            
             
            <para>
            The label detection operation is started by a call to which returns a job identifier
            (<code>JobId</code>). When the label detection operation finishes, Amazon Rekognition
            publishes a completion status to the Amazon Simple Notification Service topic registered
            in the initial call to <code>StartlabelDetection</code>. To get the results of the
            label detection operation, first check that the status value published to the Amazon
            SNS topic is <code>SUCCEEDED</code>. If so, call and pass the job identifier (<code>JobId</code>)
            from the initial call to <code>StartLabelDetection</code>.
            </para>
             
            <para>
             <code>GetLabelDetection</code> returns an array of detected labels (<code>Labels</code>)
            sorted by the time the labels were detected. You can also sort by the label name by
            specifying <code>NAME</code> for the <code>SortBy</code> input parameter.
            </para>
             
            <para>
            The labels returned include the label name, the percentage confidence in the accuracy
            of the detected label, and the time the label was detected in the video.
            </para>
             
            <para>
            Use MaxResults parameter to limit the number of labels returned. If there are more
            results than specified in <code>MaxResults</code>, the value of <code>NextToken</code>
            in the operation response contains a pagination token for getting the next set of
            results. To get the next page of results, call <code>GetlabelDetection</code> and
            populate the <code>NextToken</code> request parameter with the token value returned
            from the previous call to <code>GetLabelDetection</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.GetLabelDetectionRequest.JobId">
            <summary>
            Gets and sets the property JobId. 
            <para>
            Job identifier for the label detection operation for which you want results returned.
            You get the job identifer from an initial call to <code>StartlabelDetection</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.GetLabelDetectionRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            Maximum number of results to return per paginated call. The largest value you can
            specify is 1000. If you specify a value greater than 1000, a maximum of 1000 results
            is returned. The default value is 1000.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.GetLabelDetectionRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            If the previous response was incomplete (because there are more labels to retrieve),
            Rekognition Video returns a pagination token in the response. You can use this pagination
            token to retrieve the next set of labels. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.GetLabelDetectionRequest.SortBy">
            <summary>
            Gets and sets the property SortBy. 
            <para>
            Sort to use for elements in the <code>Labels</code> array. Use <code>TIMESTAMP</code>
            to sort array elements by the time labels are detected. Use <code>NAME</code> to alphabetically
            group elements for a label together. Within each label group, the array element are
            sorted by detection confidence. The default sort is by <code>TIMESTAMP</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.GetLabelDetectionResponse">
            <summary>
            This is the response object from the GetLabelDetection operation.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.GetLabelDetectionResponse.JobStatus">
            <summary>
            Gets and sets the property JobStatus. 
            <para>
            The current status of the label detection job.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.GetLabelDetectionResponse.Labels">
            <summary>
            Gets and sets the property Labels. 
            <para>
            An array of labels detected in the video. Each element contains the detected label
            and the time, in milliseconds from the start of the video, that the label was detected.
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.GetLabelDetectionResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            If the response is truncated, Rekognition Video returns this token that you can use
            in the subsequent request to retrieve the next set of labels.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.GetLabelDetectionResponse.StatusMessage">
            <summary>
            Gets and sets the property StatusMessage. 
            <para>
            If the job fails, <code>StatusMessage</code> provides a descriptive error message.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.GetLabelDetectionResponse.VideoMetadata">
            <summary>
            Gets and sets the property VideoMetadata. 
            <para>
            Information about a video that Rekognition Video analyzed. <code>Videometadata</code>
            is returned in every page of paginated responses from a Amazon Rekognition video operation.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.GetPersonTrackingRequest">
            <summary>
            Container for the parameters to the GetPersonTracking operation.
            Gets the person tracking results of a Rekognition Video analysis started by .
            
             
            <para>
            The person detection operation is started by a call to <code>StartPersonTracking</code>
            which returns a job identifier (<code>JobId</code>). When the person detection operation
            finishes, Rekognition Video publishes a completion status to the Amazon Simple Notification
            Service topic registered in the initial call to <code>StartPersonTracking</code>.
            </para>
             
            <para>
            To get the results of the person tracking operation, first check that the status value
            published to the Amazon SNS topic is <code>SUCCEEDED</code>. If so, call and pass
            the job identifier (<code>JobId</code>) from the initial call to <code>StartPersonTracking</code>.
            </para>
             
            <para>
             <code>GetPersonTracking</code> returns an array, <code>Persons</code>, of tracked
            persons and the time(s) they were tracked in the video. 
            </para>
             <note> 
            <para>
             <code>GetPersonTracking</code> only returns the default facial attributes (<code>BoundingBox</code>,
            <code>Confidence</code>, <code>Landmarks</code>, <code>Pose</code>, and <code>Quality</code>).
            The other facial attributes listed in the <code>Face</code> object of the following
            response syntax are not returned. For more information, see . 
            </para>
             </note> 
            <para>
            By default, the array is sorted by the time(s) a person is tracked in the video. You
            can sort by tracked persons by specifying <code>INDEX</code> for the <code>SortBy</code>
            input parameter.
            </para>
             
            <para>
            Use the <code>MaxResults</code> parameter to limit the number of items returned. If
            there are more results than specified in <code>MaxResults</code>, the value of <code>NextToken</code>
            in the operation response contains a pagination token for getting the next set of
            results. To get the next page of results, call <code>GetPersonTracking</code> and
            populate the <code>NextToken</code> request parameter with the token value returned
            from the previous call to <code>GetPersonTracking</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.GetPersonTrackingRequest.JobId">
            <summary>
            Gets and sets the property JobId. 
            <para>
            The identifier for a job that tracks persons in a video. You get the <code>JobId</code>
            from a call to <code>StartPersonTracking</code>. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.GetPersonTrackingRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            Maximum number of results to return per paginated call. The largest value you can
            specify is 1000. If you specify a value greater than 1000, a maximum of 1000 results
            is returned. The default value is 1000.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.GetPersonTrackingRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            If the previous response was incomplete (because there are more persons to retrieve),
            Rekognition Video returns a pagination token in the response. You can use this pagination
            token to retrieve the next set of persons. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.GetPersonTrackingRequest.SortBy">
            <summary>
            Gets and sets the property SortBy. 
            <para>
            Sort to use for elements in the <code>Persons</code> array. Use <code>TIMESTAMP</code>
            to sort array elements by the time persons are detected. Use <code>INDEX</code> to
            sort by the tracked persons. If you sort by <code>INDEX</code>, the array elements
            for each person are sorted by detection confidence. The default sort is by <code>TIMESTAMP</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.GetPersonTrackingResponse">
            <summary>
            This is the response object from the GetPersonTracking operation.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.GetPersonTrackingResponse.JobStatus">
            <summary>
            Gets and sets the property JobStatus. 
            <para>
            The current status of the person tracking job.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.GetPersonTrackingResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            If the response is truncated, Rekognition Video returns this token that you can use
            in the subsequent request to retrieve the next set of persons. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.GetPersonTrackingResponse.Persons">
            <summary>
            Gets and sets the property Persons. 
            <para>
            An array of the persons detected in the video and the times they are tracked throughout
            the video. An array element will exist for each time the person is tracked. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.GetPersonTrackingResponse.StatusMessage">
            <summary>
            Gets and sets the property StatusMessage. 
            <para>
            If the job fails, <code>StatusMessage</code> provides a descriptive error message.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.GetPersonTrackingResponse.VideoMetadata">
            <summary>
            Gets and sets the property VideoMetadata. 
            <para>
            Information about a video that Rekognition Video analyzed. <code>Videometadata</code>
            is returned in every page of paginated responses from a Rekognition Video operation.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.IdempotentParameterMismatchException">
            <summary>
             Rekognition exception
             </summary>
        </member>
        <member name="M:Amazon.Rekognition.Model.IdempotentParameterMismatchException.#ctor(System.String)">
            <summary>
            Constructs a new IdempotentParameterMismatchException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Rekognition.Model.IdempotentParameterMismatchException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of IdempotentParameterMismatchException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Rekognition.Model.IdempotentParameterMismatchException.#ctor(System.Exception)">
            <summary>
            Construct instance of IdempotentParameterMismatchException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Rekognition.Model.IdempotentParameterMismatchException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of IdempotentParameterMismatchException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Rekognition.Model.IdempotentParameterMismatchException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of IdempotentParameterMismatchException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.Rekognition.Model.Image">
            <summary>
            Provides the input image either as bytes or an S3 object.
            
             
            <para>
            You pass image bytes to a Rekognition API operation by using the <code>Bytes</code>
            property. For example, you would use the <code>Bytes</code> property to pass an image
            loaded from a local file system. Image bytes passed by using the <code>Bytes</code>
            property must be base64-encoded. Your code may not need to encode image bytes if you
            are using an AWS SDK to call Rekognition API operations. For more information, see
            <a>images-bytes</a>.
            </para>
             
            <para>
             You pass images stored in an S3 bucket to a Rekognition API operation by using the
            <code>S3Object</code> property. Images stored in an S3 bucket do not need to be base64-encoded.
            </para>
             
            <para>
            The region for the S3 bucket containing the S3 object must match the region you use
            for Amazon Rekognition operations.
            </para>
             
            <para>
            If you use the Amazon CLI to call Amazon Rekognition operations, passing image bytes
            using the Bytes property is not supported. You must first upload the image to an Amazon
            S3 bucket and then call the operation using the S3Object property.
            </para>
             
            <para>
            For Amazon Rekognition to process an S3 object, the user must have permission to access
            the S3 object. For more information, see <a>manage-access-resource-policies</a>. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.Image.Bytes">
            <summary>
            Gets and sets the property Bytes. 
            <para>
            Blob of image bytes up to 5 MBs.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.Image.S3Object">
            <summary>
            Gets and sets the property S3Object. 
            <para>
            Identifies an S3 object as the image source.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.ImageQuality">
            <summary>
            Identifies face image brightness and sharpness.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.ImageQuality.Brightness">
            <summary>
            Gets and sets the property Brightness. 
            <para>
            Value representing brightness of the face. The service returns a value between 0 and
            100 (inclusive). A higher value indicates a brighter face image.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.ImageQuality.Sharpness">
            <summary>
            Gets and sets the property Sharpness. 
            <para>
            Value representing sharpness of the face. The service returns a value between 0 and
            100 (inclusive). A higher value indicates a sharper face image.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.ImageTooLargeException">
            <summary>
             Rekognition exception
             </summary>
        </member>
        <member name="M:Amazon.Rekognition.Model.ImageTooLargeException.#ctor(System.String)">
            <summary>
            Constructs a new ImageTooLargeException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Rekognition.Model.ImageTooLargeException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ImageTooLargeException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Rekognition.Model.ImageTooLargeException.#ctor(System.Exception)">
            <summary>
            Construct instance of ImageTooLargeException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Rekognition.Model.ImageTooLargeException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ImageTooLargeException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Rekognition.Model.ImageTooLargeException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ImageTooLargeException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.Rekognition.Model.IndexFacesRequest">
            <summary>
            Container for the parameters to the IndexFaces operation.
            Detects faces in the input image and adds them to the specified collection. 
            
             
            <para>
            Amazon Rekognition does not save the actual faces detected. Instead, the underlying
            detection algorithm first detects the faces in the input image, and for each face
            extracts facial features into a feature vector, and stores it in the back-end database.
            Amazon Rekognition uses feature vectors when performing face match and search operations
            using the and operations.
            </para>
             
            <para>
            If you are using version 1.0 of the face detection model, <code>IndexFaces</code>
            indexes the 15 largest faces in the input image. Later versions of the face detection
            model index the 100 largest faces in the input image. To determine which version of
            the model you are using, check the the value of <code>FaceModelVersion</code> in the
            response from <code>IndexFaces</code>. For more information, see <a>face-detection-model</a>.
            </para>
             
            <para>
            If you provide the optional <code>ExternalImageID</code> for the input image you provided,
            Amazon Rekognition associates this ID with all faces that it detects. When you call
            the operation, the response returns the external ID. You can use this external image
            ID to create a client-side index to associate the faces with each image. You can then
            use the index to find all faces in an image. 
            </para>
             
            <para>
            In response, the operation returns an array of metadata for all detected faces. This
            includes, the bounding box of the detected face, confidence value (indicating the
            bounding box contains a face), a face ID assigned by the service for each face that
            is detected and stored, and an image ID assigned by the service for the input image.
            If you request all facial attributes (using the <code>detectionAttributes</code> parameter,
            Amazon Rekognition returns detailed facial attributes such as facial landmarks (for
            example, location of eye and mount) and other facial attributes such gender. If you
            provide the same image, specify the same collection, and use the same external ID
            in the <code>IndexFaces</code> operation, Amazon Rekognition doesn't save duplicate
            face metadata. 
            </para>
             
            <para>
            The input image is passed either as base64-encoded image bytes or as a reference to
            an image in an Amazon S3 bucket. If you use the Amazon CLI to call Amazon Rekognition
            operations, passing image bytes is not supported. The image must be either a PNG or
            JPEG formatted file. 
            </para>
             
            <para>
            This operation requires permissions to perform the <code>rekognition:IndexFaces</code>
            action.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.IndexFacesRequest.CollectionId">
            <summary>
            Gets and sets the property CollectionId. 
            <para>
            The ID of an existing collection to which you want to add the faces that are detected
            in the input images.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.IndexFacesRequest.DetectionAttributes">
            <summary>
            Gets and sets the property DetectionAttributes. 
            <para>
            An array of facial attributes that you want to be returned. This can be the default
            list of attributes or all attributes. If you don't specify a value for <code>Attributes</code>
            or if you specify <code>["DEFAULT"]</code>, the API returns the following subset of
            facial attributes: <code>BoundingBox</code>, <code>Confidence</code>, <code>Pose</code>,
            <code>Quality</code> and <code>Landmarks</code>. If you provide <code>["ALL"]</code>,
            all facial attributes are returned but the operation will take longer to complete.
            </para>
             
            <para>
            If you provide both, <code>["ALL", "DEFAULT"]</code>, the service uses a logical AND
            operator to determine which attributes to return (in this case, all attributes). 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.IndexFacesRequest.ExternalImageId">
            <summary>
            Gets and sets the property ExternalImageId. 
            <para>
            ID you want to assign to all the faces detected in the image.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.IndexFacesRequest.Image">
            <summary>
            Gets and sets the property Image. 
            <para>
            The input image as base64-encoded bytes or an S3 object. If you use the AWS CLI to
            call Amazon Rekognition operations, passing base64-encoded image bytes is not supported.
            
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.IndexFacesResponse">
            <summary>
            This is the response object from the IndexFaces operation.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.IndexFacesResponse.FaceModelVersion">
            <summary>
            Gets and sets the property FaceModelVersion. 
            <para>
            Version number of the face detection model associated with the input collection (<code>CollectionId</code>).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.IndexFacesResponse.FaceRecords">
            <summary>
            Gets and sets the property FaceRecords. 
            <para>
            An array of faces detected and added to the collection. For more information, see
            <a>collections-index-faces</a>. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.IndexFacesResponse.OrientationCorrection">
            <summary>
            Gets and sets the property OrientationCorrection. 
            <para>
            The orientation of the input image (counterclockwise direction). If your application
            displays the image, you can use this value to correct image orientation. The bounding
            box coordinates returned in <code>FaceRecords</code> represent face locations before
            the image orientation is corrected. 
            </para>
             <note> 
            <para>
            If the input image is in jpeg format, it might contain exchangeable image (Exif) metadata.
            If so, and the Exif metadata populates the orientation field, the value of <code>OrientationCorrection</code>
            is null and the bounding box coordinates in <code>FaceRecords</code> represent face
            locations after Exif metadata is used to correct the image orientation. Images in
            .png format don't contain Exif metadata.
            </para>
             </note>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.InternalServerErrorException">
            <summary>
             Rekognition exception
             </summary>
        </member>
        <member name="M:Amazon.Rekognition.Model.InternalServerErrorException.#ctor(System.String)">
            <summary>
            Constructs a new InternalServerErrorException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Rekognition.Model.InternalServerErrorException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InternalServerErrorException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Rekognition.Model.InternalServerErrorException.#ctor(System.Exception)">
            <summary>
            Construct instance of InternalServerErrorException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Rekognition.Model.InternalServerErrorException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InternalServerErrorException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Rekognition.Model.InternalServerErrorException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InternalServerErrorException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.AgeRangeUnmarshaller">
            <summary>
            Response Unmarshaller for AgeRange Object
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.AgeRangeUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Rekognition#Model#AgeRange,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.AgeRangeUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.AgeRangeUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.BeardUnmarshaller">
            <summary>
            Response Unmarshaller for Beard Object
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.BeardUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Rekognition#Model#Beard,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.BeardUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.BeardUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.BoundingBoxUnmarshaller">
            <summary>
            Response Unmarshaller for BoundingBox Object
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.BoundingBoxUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Rekognition#Model#BoundingBox,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.BoundingBoxUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.BoundingBoxUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.CelebrityDetailUnmarshaller">
            <summary>
            Response Unmarshaller for CelebrityDetail Object
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.CelebrityDetailUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Rekognition#Model#CelebrityDetail,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.CelebrityDetailUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.CelebrityDetailUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.CelebrityRecognitionUnmarshaller">
            <summary>
            Response Unmarshaller for CelebrityRecognition Object
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.CelebrityRecognitionUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Rekognition#Model#CelebrityRecognition,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.CelebrityRecognitionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.CelebrityRecognitionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.CelebrityUnmarshaller">
            <summary>
            Response Unmarshaller for Celebrity Object
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.CelebrityUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Rekognition#Model#Celebrity,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.CelebrityUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.CelebrityUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.ComparedFaceUnmarshaller">
            <summary>
            Response Unmarshaller for ComparedFace Object
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.ComparedFaceUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Rekognition#Model#ComparedFace,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.ComparedFaceUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.ComparedFaceUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.ComparedSourceImageFaceUnmarshaller">
            <summary>
            Response Unmarshaller for ComparedSourceImageFace Object
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.ComparedSourceImageFaceUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Rekognition#Model#ComparedSourceImageFace,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.ComparedSourceImageFaceUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.ComparedSourceImageFaceUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.CompareFacesMatchUnmarshaller">
            <summary>
            Response Unmarshaller for CompareFacesMatch Object
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.CompareFacesMatchUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Rekognition#Model#CompareFacesMatch,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.CompareFacesMatchUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.CompareFacesMatchUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.CompareFacesRequestMarshaller">
            <summary>
            CompareFaces Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.CompareFacesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.CompareFacesRequestMarshaller.Marshall(Amazon.Rekognition.Model.CompareFacesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.CompareFacesRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.CompareFacesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CompareFaces operation
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.CompareFacesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.CompareFacesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.CompareFacesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.ContentModerationDetectionUnmarshaller">
            <summary>
            Response Unmarshaller for ContentModerationDetection Object
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.ContentModerationDetectionUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Rekognition#Model#ContentModerationDetection,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.ContentModerationDetectionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.ContentModerationDetectionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.CreateCollectionRequestMarshaller">
            <summary>
            CreateCollection Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.CreateCollectionRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.CreateCollectionRequestMarshaller.Marshall(Amazon.Rekognition.Model.CreateCollectionRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.CreateCollectionRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.CreateCollectionResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateCollection operation
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.CreateCollectionResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.CreateCollectionResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.CreateCollectionResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.CreateStreamProcessorRequestMarshaller">
            <summary>
            CreateStreamProcessor Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.CreateStreamProcessorRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.CreateStreamProcessorRequestMarshaller.Marshall(Amazon.Rekognition.Model.CreateStreamProcessorRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.CreateStreamProcessorRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.CreateStreamProcessorResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateStreamProcessor operation
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.CreateStreamProcessorResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.CreateStreamProcessorResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.CreateStreamProcessorResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.DeleteCollectionRequestMarshaller">
            <summary>
            DeleteCollection Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.DeleteCollectionRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.DeleteCollectionRequestMarshaller.Marshall(Amazon.Rekognition.Model.DeleteCollectionRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.DeleteCollectionRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.DeleteCollectionResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteCollection operation
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.DeleteCollectionResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.DeleteCollectionResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.DeleteCollectionResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.DeleteFacesRequestMarshaller">
            <summary>
            DeleteFaces Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.DeleteFacesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.DeleteFacesRequestMarshaller.Marshall(Amazon.Rekognition.Model.DeleteFacesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.DeleteFacesRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.DeleteFacesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteFaces operation
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.DeleteFacesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.DeleteFacesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.DeleteFacesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.DeleteStreamProcessorRequestMarshaller">
            <summary>
            DeleteStreamProcessor Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.DeleteStreamProcessorRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.DeleteStreamProcessorRequestMarshaller.Marshall(Amazon.Rekognition.Model.DeleteStreamProcessorRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.DeleteStreamProcessorRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.DeleteStreamProcessorResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteStreamProcessor operation
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.DeleteStreamProcessorResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.DeleteStreamProcessorResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.DeleteStreamProcessorResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.DescribeStreamProcessorRequestMarshaller">
            <summary>
            DescribeStreamProcessor Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.DescribeStreamProcessorRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.DescribeStreamProcessorRequestMarshaller.Marshall(Amazon.Rekognition.Model.DescribeStreamProcessorRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.DescribeStreamProcessorRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.DescribeStreamProcessorResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeStreamProcessor operation
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.DescribeStreamProcessorResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.DescribeStreamProcessorResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.DescribeStreamProcessorResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.DetectFacesRequestMarshaller">
            <summary>
            DetectFaces Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.DetectFacesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.DetectFacesRequestMarshaller.Marshall(Amazon.Rekognition.Model.DetectFacesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.DetectFacesRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.DetectFacesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DetectFaces operation
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.DetectFacesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.DetectFacesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.DetectFacesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.DetectLabelsRequestMarshaller">
            <summary>
            DetectLabels Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.DetectLabelsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.DetectLabelsRequestMarshaller.Marshall(Amazon.Rekognition.Model.DetectLabelsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.DetectLabelsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.DetectLabelsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DetectLabels operation
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.DetectLabelsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.DetectLabelsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.DetectLabelsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.DetectModerationLabelsRequestMarshaller">
            <summary>
            DetectModerationLabels Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.DetectModerationLabelsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.DetectModerationLabelsRequestMarshaller.Marshall(Amazon.Rekognition.Model.DetectModerationLabelsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.DetectModerationLabelsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.DetectModerationLabelsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DetectModerationLabels operation
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.DetectModerationLabelsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.DetectModerationLabelsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.DetectModerationLabelsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.DetectTextRequestMarshaller">
            <summary>
            DetectText Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.DetectTextRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.DetectTextRequestMarshaller.Marshall(Amazon.Rekognition.Model.DetectTextRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.DetectTextRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.DetectTextResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DetectText operation
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.DetectTextResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.DetectTextResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.DetectTextResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.EmotionUnmarshaller">
            <summary>
            Response Unmarshaller for Emotion Object
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.EmotionUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Rekognition#Model#Emotion,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.EmotionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.EmotionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.EyeglassesUnmarshaller">
            <summary>
            Response Unmarshaller for Eyeglasses Object
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.EyeglassesUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Rekognition#Model#Eyeglasses,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.EyeglassesUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.EyeglassesUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.EyeOpenUnmarshaller">
            <summary>
            Response Unmarshaller for EyeOpen Object
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.EyeOpenUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Rekognition#Model#EyeOpen,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.EyeOpenUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.EyeOpenUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.FaceDetailUnmarshaller">
            <summary>
            Response Unmarshaller for FaceDetail Object
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.FaceDetailUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Rekognition#Model#FaceDetail,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.FaceDetailUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.FaceDetailUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.FaceDetectionUnmarshaller">
            <summary>
            Response Unmarshaller for FaceDetection Object
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.FaceDetectionUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Rekognition#Model#FaceDetection,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.FaceDetectionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.FaceDetectionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.FaceMatchUnmarshaller">
            <summary>
            Response Unmarshaller for FaceMatch Object
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.FaceMatchUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Rekognition#Model#FaceMatch,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.FaceMatchUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.FaceMatchUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.FaceRecordUnmarshaller">
            <summary>
            Response Unmarshaller for FaceRecord Object
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.FaceRecordUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Rekognition#Model#FaceRecord,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.FaceRecordUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.FaceRecordUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.FaceSearchSettingsMarshaller">
            <summary>
            FaceSearchSettings Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.FaceSearchSettingsMarshaller.Marshall(Amazon.Rekognition.Model.FaceSearchSettings,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Rekognition.Model.Internal.MarshallTransformations.FaceSearchSettingsMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.FaceSearchSettingsUnmarshaller">
            <summary>
            Response Unmarshaller for FaceSearchSettings Object
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.FaceSearchSettingsUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Rekognition#Model#FaceSearchSettings,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.FaceSearchSettingsUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.FaceSearchSettingsUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.FaceUnmarshaller">
            <summary>
            Response Unmarshaller for Face Object
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.FaceUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Rekognition#Model#Face,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.FaceUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.FaceUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.GenderUnmarshaller">
            <summary>
            Response Unmarshaller for Gender Object
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.GenderUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Rekognition#Model#Gender,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.GenderUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.GenderUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.GeometryUnmarshaller">
            <summary>
            Response Unmarshaller for Geometry Object
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.GeometryUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Rekognition#Model#Geometry,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.GeometryUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.GeometryUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.GetCelebrityInfoRequestMarshaller">
            <summary>
            GetCelebrityInfo Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.GetCelebrityInfoRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.GetCelebrityInfoRequestMarshaller.Marshall(Amazon.Rekognition.Model.GetCelebrityInfoRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.GetCelebrityInfoRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.GetCelebrityInfoResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetCelebrityInfo operation
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.GetCelebrityInfoResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.GetCelebrityInfoResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.GetCelebrityInfoResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.GetCelebrityRecognitionRequestMarshaller">
            <summary>
            GetCelebrityRecognition Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.GetCelebrityRecognitionRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.GetCelebrityRecognitionRequestMarshaller.Marshall(Amazon.Rekognition.Model.GetCelebrityRecognitionRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.GetCelebrityRecognitionRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.GetCelebrityRecognitionResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetCelebrityRecognition operation
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.GetCelebrityRecognitionResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.GetCelebrityRecognitionResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.GetCelebrityRecognitionResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.GetContentModerationRequestMarshaller">
            <summary>
            GetContentModeration Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.GetContentModerationRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.GetContentModerationRequestMarshaller.Marshall(Amazon.Rekognition.Model.GetContentModerationRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.GetContentModerationRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.GetContentModerationResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetContentModeration operation
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.GetContentModerationResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.GetContentModerationResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.GetContentModerationResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.GetFaceDetectionRequestMarshaller">
            <summary>
            GetFaceDetection Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.GetFaceDetectionRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.GetFaceDetectionRequestMarshaller.Marshall(Amazon.Rekognition.Model.GetFaceDetectionRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.GetFaceDetectionRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.GetFaceDetectionResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetFaceDetection operation
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.GetFaceDetectionResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.GetFaceDetectionResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.GetFaceDetectionResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.GetFaceSearchRequestMarshaller">
            <summary>
            GetFaceSearch Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.GetFaceSearchRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.GetFaceSearchRequestMarshaller.Marshall(Amazon.Rekognition.Model.GetFaceSearchRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.GetFaceSearchRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.GetFaceSearchResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetFaceSearch operation
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.GetFaceSearchResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.GetFaceSearchResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.GetFaceSearchResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.GetLabelDetectionRequestMarshaller">
            <summary>
            GetLabelDetection Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.GetLabelDetectionRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.GetLabelDetectionRequestMarshaller.Marshall(Amazon.Rekognition.Model.GetLabelDetectionRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.GetLabelDetectionRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.GetLabelDetectionResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetLabelDetection operation
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.GetLabelDetectionResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.GetLabelDetectionResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.GetLabelDetectionResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.GetPersonTrackingRequestMarshaller">
            <summary>
            GetPersonTracking Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.GetPersonTrackingRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.GetPersonTrackingRequestMarshaller.Marshall(Amazon.Rekognition.Model.GetPersonTrackingRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.GetPersonTrackingRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.GetPersonTrackingResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetPersonTracking operation
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.GetPersonTrackingResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.GetPersonTrackingResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.GetPersonTrackingResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.ImageMarshaller">
            <summary>
            Image Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.ImageMarshaller.Marshall(Amazon.Rekognition.Model.Image,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Rekognition.Model.Internal.MarshallTransformations.ImageMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.ImageQualityUnmarshaller">
            <summary>
            Response Unmarshaller for ImageQuality Object
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.ImageQualityUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Rekognition#Model#ImageQuality,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.ImageQualityUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.ImageQualityUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.IndexFacesRequestMarshaller">
            <summary>
            IndexFaces Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.IndexFacesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.IndexFacesRequestMarshaller.Marshall(Amazon.Rekognition.Model.IndexFacesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.IndexFacesRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.IndexFacesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for IndexFaces operation
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.IndexFacesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.IndexFacesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.IndexFacesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.KinesisDataStreamMarshaller">
            <summary>
            KinesisDataStream Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.KinesisDataStreamMarshaller.Marshall(Amazon.Rekognition.Model.KinesisDataStream,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Rekognition.Model.Internal.MarshallTransformations.KinesisDataStreamMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.KinesisDataStreamUnmarshaller">
            <summary>
            Response Unmarshaller for KinesisDataStream Object
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.KinesisDataStreamUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Rekognition#Model#KinesisDataStream,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.KinesisDataStreamUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.KinesisDataStreamUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.KinesisVideoStreamMarshaller">
            <summary>
            KinesisVideoStream Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.KinesisVideoStreamMarshaller.Marshall(Amazon.Rekognition.Model.KinesisVideoStream,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Rekognition.Model.Internal.MarshallTransformations.KinesisVideoStreamMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.KinesisVideoStreamUnmarshaller">
            <summary>
            Response Unmarshaller for KinesisVideoStream Object
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.KinesisVideoStreamUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Rekognition#Model#KinesisVideoStream,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.KinesisVideoStreamUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.KinesisVideoStreamUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.LabelDetectionUnmarshaller">
            <summary>
            Response Unmarshaller for LabelDetection Object
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.LabelDetectionUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Rekognition#Model#LabelDetection,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.LabelDetectionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.LabelDetectionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.LabelUnmarshaller">
            <summary>
            Response Unmarshaller for Label Object
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.LabelUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Rekognition#Model#Label,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.LabelUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.LabelUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.LandmarkUnmarshaller">
            <summary>
            Response Unmarshaller for Landmark Object
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.LandmarkUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Rekognition#Model#Landmark,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.LandmarkUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.LandmarkUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.ListCollectionsRequestMarshaller">
            <summary>
            ListCollections Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.ListCollectionsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.ListCollectionsRequestMarshaller.Marshall(Amazon.Rekognition.Model.ListCollectionsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.ListCollectionsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.ListCollectionsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListCollections operation
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.ListCollectionsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.ListCollectionsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.ListCollectionsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.ListFacesRequestMarshaller">
            <summary>
            ListFaces Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.ListFacesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.ListFacesRequestMarshaller.Marshall(Amazon.Rekognition.Model.ListFacesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.ListFacesRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.ListFacesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListFaces operation
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.ListFacesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.ListFacesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.ListFacesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.ListStreamProcessorsRequestMarshaller">
            <summary>
            ListStreamProcessors Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.ListStreamProcessorsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.ListStreamProcessorsRequestMarshaller.Marshall(Amazon.Rekognition.Model.ListStreamProcessorsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.ListStreamProcessorsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.ListStreamProcessorsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListStreamProcessors operation
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.ListStreamProcessorsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.ListStreamProcessorsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.ListStreamProcessorsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.ModerationLabelUnmarshaller">
            <summary>
            Response Unmarshaller for ModerationLabel Object
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.ModerationLabelUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Rekognition#Model#ModerationLabel,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.ModerationLabelUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.ModerationLabelUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.MouthOpenUnmarshaller">
            <summary>
            Response Unmarshaller for MouthOpen Object
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.MouthOpenUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Rekognition#Model#MouthOpen,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.MouthOpenUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.MouthOpenUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.MustacheUnmarshaller">
            <summary>
            Response Unmarshaller for Mustache Object
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.MustacheUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Rekognition#Model#Mustache,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.MustacheUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.MustacheUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.NotificationChannelMarshaller">
            <summary>
            NotificationChannel Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.NotificationChannelMarshaller.Marshall(Amazon.Rekognition.Model.NotificationChannel,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Rekognition.Model.Internal.MarshallTransformations.NotificationChannelMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.PersonDetailUnmarshaller">
            <summary>
            Response Unmarshaller for PersonDetail Object
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.PersonDetailUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Rekognition#Model#PersonDetail,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.PersonDetailUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.PersonDetailUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.PersonDetectionUnmarshaller">
            <summary>
            Response Unmarshaller for PersonDetection Object
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.PersonDetectionUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Rekognition#Model#PersonDetection,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.PersonDetectionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.PersonDetectionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.PersonMatchUnmarshaller">
            <summary>
            Response Unmarshaller for PersonMatch Object
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.PersonMatchUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Rekognition#Model#PersonMatch,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.PersonMatchUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.PersonMatchUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.PointUnmarshaller">
            <summary>
            Response Unmarshaller for Point Object
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.PointUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Rekognition#Model#Point,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.PointUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.PointUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.PoseUnmarshaller">
            <summary>
            Response Unmarshaller for Pose Object
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.PoseUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Rekognition#Model#Pose,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.PoseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.PoseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.RecognizeCelebritiesRequestMarshaller">
            <summary>
            RecognizeCelebrities Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.RecognizeCelebritiesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.RecognizeCelebritiesRequestMarshaller.Marshall(Amazon.Rekognition.Model.RecognizeCelebritiesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.RecognizeCelebritiesRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.RecognizeCelebritiesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for RecognizeCelebrities operation
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.RecognizeCelebritiesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.RecognizeCelebritiesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.RecognizeCelebritiesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.S3ObjectMarshaller">
            <summary>
            S3Object Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.S3ObjectMarshaller.Marshall(Amazon.Rekognition.Model.S3Object,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Rekognition.Model.Internal.MarshallTransformations.S3ObjectMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.SearchFacesByImageRequestMarshaller">
            <summary>
            SearchFacesByImage Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.SearchFacesByImageRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.SearchFacesByImageRequestMarshaller.Marshall(Amazon.Rekognition.Model.SearchFacesByImageRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.SearchFacesByImageRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.SearchFacesByImageResponseUnmarshaller">
            <summary>
            Response Unmarshaller for SearchFacesByImage operation
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.SearchFacesByImageResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.SearchFacesByImageResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.SearchFacesByImageResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.SearchFacesRequestMarshaller">
            <summary>
            SearchFaces Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.SearchFacesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.SearchFacesRequestMarshaller.Marshall(Amazon.Rekognition.Model.SearchFacesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.SearchFacesRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.SearchFacesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for SearchFaces operation
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.SearchFacesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.SearchFacesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.SearchFacesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.SmileUnmarshaller">
            <summary>
            Response Unmarshaller for Smile Object
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.SmileUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Rekognition#Model#Smile,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.SmileUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.SmileUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.StartCelebrityRecognitionRequestMarshaller">
            <summary>
            StartCelebrityRecognition Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.StartCelebrityRecognitionRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.StartCelebrityRecognitionRequestMarshaller.Marshall(Amazon.Rekognition.Model.StartCelebrityRecognitionRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.StartCelebrityRecognitionRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.StartCelebrityRecognitionResponseUnmarshaller">
            <summary>
            Response Unmarshaller for StartCelebrityRecognition operation
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.StartCelebrityRecognitionResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.StartCelebrityRecognitionResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.StartCelebrityRecognitionResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.StartContentModerationRequestMarshaller">
            <summary>
            StartContentModeration Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.StartContentModerationRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.StartContentModerationRequestMarshaller.Marshall(Amazon.Rekognition.Model.StartContentModerationRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.StartContentModerationRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.StartContentModerationResponseUnmarshaller">
            <summary>
            Response Unmarshaller for StartContentModeration operation
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.StartContentModerationResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.StartContentModerationResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.StartContentModerationResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.StartFaceDetectionRequestMarshaller">
            <summary>
            StartFaceDetection Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.StartFaceDetectionRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.StartFaceDetectionRequestMarshaller.Marshall(Amazon.Rekognition.Model.StartFaceDetectionRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.StartFaceDetectionRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.StartFaceDetectionResponseUnmarshaller">
            <summary>
            Response Unmarshaller for StartFaceDetection operation
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.StartFaceDetectionResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.StartFaceDetectionResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.StartFaceDetectionResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.StartFaceSearchRequestMarshaller">
            <summary>
            StartFaceSearch Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.StartFaceSearchRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.StartFaceSearchRequestMarshaller.Marshall(Amazon.Rekognition.Model.StartFaceSearchRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.StartFaceSearchRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.StartFaceSearchResponseUnmarshaller">
            <summary>
            Response Unmarshaller for StartFaceSearch operation
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.StartFaceSearchResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.StartFaceSearchResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.StartFaceSearchResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.StartLabelDetectionRequestMarshaller">
            <summary>
            StartLabelDetection Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.StartLabelDetectionRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.StartLabelDetectionRequestMarshaller.Marshall(Amazon.Rekognition.Model.StartLabelDetectionRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.StartLabelDetectionRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.StartLabelDetectionResponseUnmarshaller">
            <summary>
            Response Unmarshaller for StartLabelDetection operation
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.StartLabelDetectionResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.StartLabelDetectionResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.StartLabelDetectionResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.StartPersonTrackingRequestMarshaller">
            <summary>
            StartPersonTracking Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.StartPersonTrackingRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.StartPersonTrackingRequestMarshaller.Marshall(Amazon.Rekognition.Model.StartPersonTrackingRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.StartPersonTrackingRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.StartPersonTrackingResponseUnmarshaller">
            <summary>
            Response Unmarshaller for StartPersonTracking operation
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.StartPersonTrackingResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.StartPersonTrackingResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.StartPersonTrackingResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.StartStreamProcessorRequestMarshaller">
            <summary>
            StartStreamProcessor Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.StartStreamProcessorRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.StartStreamProcessorRequestMarshaller.Marshall(Amazon.Rekognition.Model.StartStreamProcessorRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.StartStreamProcessorRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.StartStreamProcessorResponseUnmarshaller">
            <summary>
            Response Unmarshaller for StartStreamProcessor operation
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.StartStreamProcessorResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.StartStreamProcessorResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.StartStreamProcessorResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.StopStreamProcessorRequestMarshaller">
            <summary>
            StopStreamProcessor Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.StopStreamProcessorRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.StopStreamProcessorRequestMarshaller.Marshall(Amazon.Rekognition.Model.StopStreamProcessorRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.StopStreamProcessorRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.StopStreamProcessorResponseUnmarshaller">
            <summary>
            Response Unmarshaller for StopStreamProcessor operation
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.StopStreamProcessorResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.StopStreamProcessorResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.StopStreamProcessorResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.StreamProcessorInputMarshaller">
            <summary>
            StreamProcessorInput Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.StreamProcessorInputMarshaller.Marshall(Amazon.Rekognition.Model.StreamProcessorInput,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Rekognition.Model.Internal.MarshallTransformations.StreamProcessorInputMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.StreamProcessorInputUnmarshaller">
            <summary>
            Response Unmarshaller for StreamProcessorInput Object
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.StreamProcessorInputUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Rekognition#Model#StreamProcessorInput,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.StreamProcessorInputUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.StreamProcessorInputUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.StreamProcessorOutputMarshaller">
            <summary>
            StreamProcessorOutput Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.StreamProcessorOutputMarshaller.Marshall(Amazon.Rekognition.Model.StreamProcessorOutput,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Rekognition.Model.Internal.MarshallTransformations.StreamProcessorOutputMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.StreamProcessorOutputUnmarshaller">
            <summary>
            Response Unmarshaller for StreamProcessorOutput Object
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.StreamProcessorOutputUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Rekognition#Model#StreamProcessorOutput,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.StreamProcessorOutputUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.StreamProcessorOutputUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.StreamProcessorSettingsMarshaller">
            <summary>
            StreamProcessorSettings Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.StreamProcessorSettingsMarshaller.Marshall(Amazon.Rekognition.Model.StreamProcessorSettings,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Rekognition.Model.Internal.MarshallTransformations.StreamProcessorSettingsMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.StreamProcessorSettingsUnmarshaller">
            <summary>
            Response Unmarshaller for StreamProcessorSettings Object
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.StreamProcessorSettingsUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Rekognition#Model#StreamProcessorSettings,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.StreamProcessorSettingsUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.StreamProcessorSettingsUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.StreamProcessorUnmarshaller">
            <summary>
            Response Unmarshaller for StreamProcessor Object
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.StreamProcessorUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Rekognition#Model#StreamProcessor,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.StreamProcessorUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.StreamProcessorUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.SunglassesUnmarshaller">
            <summary>
            Response Unmarshaller for Sunglasses Object
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.SunglassesUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Rekognition#Model#Sunglasses,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.SunglassesUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.SunglassesUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.TextDetectionUnmarshaller">
            <summary>
            Response Unmarshaller for TextDetection Object
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.TextDetectionUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Rekognition#Model#TextDetection,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.TextDetectionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.TextDetectionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.VideoMarshaller">
            <summary>
            Video Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.VideoMarshaller.Marshall(Amazon.Rekognition.Model.Video,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.Rekognition.Model.Internal.MarshallTransformations.VideoMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.Internal.MarshallTransformations.VideoMetadataUnmarshaller">
            <summary>
            Response Unmarshaller for VideoMetadata Object
            </summary>  
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.VideoMetadataUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#Rekognition#Model#VideoMetadata,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Rekognition.Model.Internal.MarshallTransformations.VideoMetadataUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Rekognition.Model.Internal.MarshallTransformations.VideoMetadataUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Rekognition.Model.InvalidImageFormatException">
            <summary>
             Rekognition exception
             </summary>
        </member>
        <member name="M:Amazon.Rekognition.Model.InvalidImageFormatException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidImageFormatException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Rekognition.Model.InvalidImageFormatException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidImageFormatException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Rekognition.Model.InvalidImageFormatException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidImageFormatException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Rekognition.Model.InvalidImageFormatException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidImageFormatException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Rekognition.Model.InvalidImageFormatException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidImageFormatException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.Rekognition.Model.InvalidPaginationTokenException">
            <summary>
             Rekognition exception
             </summary>
        </member>
        <member name="M:Amazon.Rekognition.Model.InvalidPaginationTokenException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidPaginationTokenException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Rekognition.Model.InvalidPaginationTokenException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidPaginationTokenException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Rekognition.Model.InvalidPaginationTokenException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidPaginationTokenException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Rekognition.Model.InvalidPaginationTokenException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidPaginationTokenException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Rekognition.Model.InvalidPaginationTokenException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidPaginationTokenException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.Rekognition.Model.InvalidParameterException">
            <summary>
             Rekognition exception
             </summary>
        </member>
        <member name="M:Amazon.Rekognition.Model.InvalidParameterException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidParameterException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Rekognition.Model.InvalidParameterException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidParameterException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Rekognition.Model.InvalidParameterException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidParameterException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Rekognition.Model.InvalidParameterException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidParameterException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Rekognition.Model.InvalidParameterException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidParameterException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.Rekognition.Model.InvalidS3ObjectException">
            <summary>
             Rekognition exception
             </summary>
        </member>
        <member name="M:Amazon.Rekognition.Model.InvalidS3ObjectException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidS3ObjectException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Rekognition.Model.InvalidS3ObjectException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidS3ObjectException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Rekognition.Model.InvalidS3ObjectException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidS3ObjectException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Rekognition.Model.InvalidS3ObjectException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidS3ObjectException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Rekognition.Model.InvalidS3ObjectException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidS3ObjectException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.Rekognition.Model.KinesisDataStream">
            <summary>
            The Kinesis data stream Amazon Rekognition to which the analysis results of a Amazon
            Rekognition stream processor are streamed. For more information, see .
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.KinesisDataStream.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            ARN of the output Amazon Kinesis Data Streams stream.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.KinesisVideoStream">
            <summary>
            Kinesis video stream stream that provides the source streaming video for a Rekognition
            Video stream processor. For more information, see .
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.KinesisVideoStream.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            ARN of the Kinesis video stream stream that streams the source video.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.Label">
            <summary>
            Structure containing details about the detected label, including name, and level of
            confidence.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.Label.Confidence">
            <summary>
            Gets and sets the property Confidence. 
            <para>
            Level of confidence.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.Label.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name (label) of the object.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.LabelDetection">
            <summary>
            Information about a label detected in a video analysis request and the time the label
            was detected in the video.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.LabelDetection.Label">
            <summary>
            Gets and sets the property Label. 
            <para>
            Details about the detected label.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.LabelDetection.Timestamp">
            <summary>
            Gets and sets the property Timestamp. 
            <para>
            Time, in milliseconds from the start of the video, that the label was detected.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.Landmark">
            <summary>
            Indicates the location of the landmark on the face.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.Landmark.Type">
            <summary>
            Gets and sets the property Type. 
            <para>
            Type of the landmark.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.Landmark.X">
            <summary>
            Gets and sets the property X. 
            <para>
            x-coordinate from the top left of the landmark expressed as the ratio of the width
            of the image. For example, if the images is 700x200 and the x-coordinate of the landmark
            is at 350 pixels, this value is 0.5. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.Landmark.Y">
            <summary>
            Gets and sets the property Y. 
            <para>
            y-coordinate from the top left of the landmark expressed as the ratio of the height
            of the image. For example, if the images is 700x200 and the y-coordinate of the landmark
            is at 100 pixels, this value is 0.5.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.LimitExceededException">
            <summary>
             Rekognition exception
             </summary>
        </member>
        <member name="M:Amazon.Rekognition.Model.LimitExceededException.#ctor(System.String)">
            <summary>
            Constructs a new LimitExceededException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Rekognition.Model.LimitExceededException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of LimitExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Rekognition.Model.LimitExceededException.#ctor(System.Exception)">
            <summary>
            Construct instance of LimitExceededException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Rekognition.Model.LimitExceededException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of LimitExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Rekognition.Model.LimitExceededException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of LimitExceededException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.Rekognition.Model.ListCollectionsRequest">
            <summary>
            Container for the parameters to the ListCollections operation.
            Returns list of collection IDs in your account. If the result is truncated, the response
            also provides a <code>NextToken</code> that you can use in the subsequent request
            to fetch the next set of collection IDs.
            
             
            <para>
            For an example, see <a>list-collection-procedure</a>.
            </para>
             
            <para>
            This operation requires permissions to perform the <code>rekognition:ListCollections</code>
            action.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.ListCollectionsRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            Maximum number of collection IDs to return. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.ListCollectionsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            Pagination token from the previous response.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.ListCollectionsResponse">
            <summary>
            This is the response object from the ListCollections operation.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.ListCollectionsResponse.CollectionIds">
            <summary>
            Gets and sets the property CollectionIds. 
            <para>
            An array of collection IDs.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.ListCollectionsResponse.FaceModelVersions">
            <summary>
            Gets and sets the property FaceModelVersions. 
            <para>
            Version numbers of the face detection models associated with the collections in the
            array <code>CollectionIds</code>. For example, the value of <code>FaceModelVersions[2]</code>
            is the version number for the face detection model used by the collection in <code>CollectionId[2]</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.ListCollectionsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            If the result is truncated, the response provides a <code>NextToken</code> that you
            can use in the subsequent request to fetch the next set of collection IDs.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.ListFacesRequest">
            <summary>
            Container for the parameters to the ListFaces operation.
            Returns metadata for faces in the specified collection. This metadata includes information
            such as the bounding box coordinates, the confidence (that the bounding box contains
            a face), and face ID. For an example, see <a>list-faces-in-collection-procedure</a>.
            
            
             
            <para>
            This operation requires permissions to perform the <code>rekognition:ListFaces</code>
            action.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.ListFacesRequest.CollectionId">
            <summary>
            Gets and sets the property CollectionId. 
            <para>
            ID of the collection from which to list the faces.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.ListFacesRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            Maximum number of faces to return.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.ListFacesRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            If the previous response was incomplete (because there is more data to retrieve),
            Amazon Rekognition returns a pagination token in the response. You can use this pagination
            token to retrieve the next set of faces.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.ListFacesResponse">
            <summary>
            This is the response object from the ListFaces operation.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.ListFacesResponse.FaceModelVersion">
            <summary>
            Gets and sets the property FaceModelVersion. 
            <para>
            Version number of the face detection model associated with the input collection (<code>CollectionId</code>).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.ListFacesResponse.Faces">
            <summary>
            Gets and sets the property Faces. 
            <para>
            An array of <code>Face</code> objects. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.ListFacesResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            If the response is truncated, Amazon Rekognition returns this token that you can use
            in the subsequent request to retrieve the next set of faces.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.ListStreamProcessorsRequest">
            <summary>
            Container for the parameters to the ListStreamProcessors operation.
            Gets a list of stream processors that you have created with .
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.ListStreamProcessorsRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            Maximum number of stream processors you want Rekognition Video to return in the response.
            The default is 1000. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.ListStreamProcessorsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            If the previous response was incomplete (because there are more stream processors
            to retrieve), Rekognition Video returns a pagination token in the response. You can
            use this pagination token to retrieve the next set of stream processors. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.ListStreamProcessorsResponse">
            <summary>
            This is the response object from the ListStreamProcessors operation.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.ListStreamProcessorsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            If the response is truncated, Rekognition Video returns this token that you can use
            in the subsequent request to retrieve the next set of stream processors. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.ListStreamProcessorsResponse.StreamProcessors">
            <summary>
            Gets and sets the property StreamProcessors. 
            <para>
            List of stream processors that you have created.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.ModerationLabel">
            <summary>
            Provides information about a single type of moderated content found in an image or
            video. Each type of moderated content has a label within a hierarchical taxonomy.
            For more information, see <a>moderation</a>.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.ModerationLabel.Confidence">
            <summary>
            Gets and sets the property Confidence. 
            <para>
            Specifies the confidence that Amazon Rekognition has that the label has been correctly
            identified.
            </para>
             
            <para>
            If you don't specify the <code>MinConfidence</code> parameter in the call to <code>DetectModerationLabels</code>,
            the operation returns labels with a confidence value greater than or equal to 50 percent.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.ModerationLabel.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The label name for the type of content detected in the image.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.ModerationLabel.ParentName">
            <summary>
            Gets and sets the property ParentName. 
            <para>
            The name for the parent label. Labels at the top-level of the hierarchy have the parent
            label <code>""</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.MouthOpen">
            <summary>
            Indicates whether or not the mouth on the face is open, and the confidence level in
            the determination.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.MouthOpen.Confidence">
            <summary>
            Gets and sets the property Confidence. 
            <para>
            Level of confidence in the determination.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.MouthOpen.Value">
            <summary>
            Gets and sets the property Value. 
            <para>
            Boolean value that indicates whether the mouth on the face is open or not.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.Mustache">
            <summary>
            Indicates whether or not the face has a mustache, and the confidence level in the
            determination.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.Mustache.Confidence">
            <summary>
            Gets and sets the property Confidence. 
            <para>
            Level of confidence in the determination.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.Mustache.Value">
            <summary>
            Gets and sets the property Value. 
            <para>
            Boolean value that indicates whether the face has mustache or not.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.NotificationChannel">
            <summary>
            The Amazon Simple Notification Service topic to which Amazon Rekognition publishes
            the completion status of a video analysis operation. For more information, see <a>api-video</a>.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.NotificationChannel.RoleArn">
            <summary>
            Gets and sets the property RoleArn. 
            <para>
            The ARN of an IAM role that gives Amazon Rekognition publishing permissions to the
            Amazon SNS topic. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.NotificationChannel.SNSTopicArn">
            <summary>
            Gets and sets the property SNSTopicArn. 
            <para>
            The Amazon SNS topic to which Amazon Rekognition to posts the completion status.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.PersonDetail">
            <summary>
            Details about a person detected in a video analysis request.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.PersonDetail.BoundingBox">
            <summary>
            Gets and sets the property BoundingBox. 
            <para>
            Bounding box around the detected person.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.PersonDetail.Face">
            <summary>
            Gets and sets the property Face. 
            <para>
            Face details for the detected person.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.PersonDetail.Index">
            <summary>
            Gets and sets the property Index. 
            <para>
            Identifier for the person detected person within a video. Use to keep track of the
            person throughout the video. The identifier is not stored by Amazon Rekognition.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.PersonDetection">
            <summary>
            Details and tracking information for a single time a person is tracked in a video.
            Amazon Rekognition operations that track persons return an array of <code>PersonDetection</code>
            objects with elements for each time a person is tracked in a video. For more information,
            see .
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.PersonDetection.Person">
            <summary>
            Gets and sets the property Person. 
            <para>
            Details about a person tracked in a video.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.PersonDetection.Timestamp">
            <summary>
            Gets and sets the property Timestamp. 
            <para>
            The time, in milliseconds from the start of the video, that the person was tracked.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.PersonMatch">
            <summary>
            Information about a person whose face matches a face(s) in a Amazon Rekognition collection.
            Includes information about the faces in the Amazon Rekognition collection (, information
            about the person (<a>PersonDetail</a>) and the timestamp for when the person was detected
            in a video. An array of <code>PersonMatch</code> objects is returned by .
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.PersonMatch.FaceMatches">
            <summary>
            Gets and sets the property FaceMatches. 
            <para>
            Information about the faces in the input collection that match the face of a person
            in the video.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.PersonMatch.Person">
            <summary>
            Gets and sets the property Person. 
            <para>
            Information about the matched person.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.PersonMatch.Timestamp">
            <summary>
            Gets and sets the property Timestamp. 
            <para>
            The time, in milliseconds from the beginning of the video, that the person was matched
            in the video.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.Point">
            <summary>
            The X and Y coordinates of a point on an image. The X and Y values returned are ratios
            of the overall image size. For example, if the input image is 700x200 and the operation
            returns X=0.5 and Y=0.25, then the point is at the (350,50) pixel coordinate on the
            image.
            
             
            <para>
            An array of <code>Point</code> objects, <code>Polygon</code>, is returned by . <code>Polygon</code>
            represents a fine-grained polygon around detected text. For more information, see
            . 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.Point.X">
            <summary>
            Gets and sets the property X. 
            <para>
            The value of the X coordinate for a point on a <code>Polygon</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.Point.Y">
            <summary>
            Gets and sets the property Y. 
            <para>
            The value of the Y coordinate for a point on a <code>Polygon</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.Pose">
            <summary>
            Indicates the pose of the face as determined by its pitch, roll, and yaw.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.Pose.Pitch">
            <summary>
            Gets and sets the property Pitch. 
            <para>
            Value representing the face rotation on the pitch axis.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.Pose.Roll">
            <summary>
            Gets and sets the property Roll. 
            <para>
            Value representing the face rotation on the roll axis.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.Pose.Yaw">
            <summary>
            Gets and sets the property Yaw. 
            <para>
            Value representing the face rotation on the yaw axis.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.ProvisionedThroughputExceededException">
            <summary>
             Rekognition exception
             </summary>
        </member>
        <member name="M:Amazon.Rekognition.Model.ProvisionedThroughputExceededException.#ctor(System.String)">
            <summary>
            Constructs a new ProvisionedThroughputExceededException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Rekognition.Model.ProvisionedThroughputExceededException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ProvisionedThroughputExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Rekognition.Model.ProvisionedThroughputExceededException.#ctor(System.Exception)">
            <summary>
            Construct instance of ProvisionedThroughputExceededException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Rekognition.Model.ProvisionedThroughputExceededException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ProvisionedThroughputExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Rekognition.Model.ProvisionedThroughputExceededException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ProvisionedThroughputExceededException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.Rekognition.Model.RecognizeCelebritiesRequest">
            <summary>
            Container for the parameters to the RecognizeCelebrities operation.
            Returns an array of celebrities recognized in the input image. For more information,
            see <a>celebrities</a>. 
            
             
            <para>
             <code>RecognizeCelebrities</code> returns the 100 largest faces in the image. It
            lists recognized celebrities in the <code>CelebrityFaces</code> array and unrecognized
            faces in the <code>UnrecognizedFaces</code> array. <code>RecognizeCelebrities</code>
            doesn't return celebrities whose faces are not amongst the largest 100 faces in the
            image.
            </para>
             
            <para>
            For each celebrity recognized, the <code>RecognizeCelebrities</code> returns a <code>Celebrity</code>
            object. The <code>Celebrity</code> object contains the celebrity name, ID, URL links
            to additional information, match confidence, and a <code>ComparedFace</code> object
            that you can use to locate the celebrity's face on the image.
            </para>
             
            <para>
            Rekognition does not retain information about which images a celebrity has been recognized
            in. Your application must store this information and use the <code>Celebrity</code>
            ID property as a unique identifier for the celebrity. If you don't store the celebrity
            name or additional information URLs returned by <code>RecognizeCelebrities</code>,
            you will need the ID to identify the celebrity in a call to the operation.
            </para>
             
            <para>
            You pass the imput image either as base64-encoded image bytes or as a reference to
            an image in an Amazon S3 bucket. If you use the Amazon CLI to call Amazon Rekognition
            operations, passing image bytes is not supported. The image must be either a PNG or
            JPEG formatted file. 
            </para>
             
            <para>
            For an example, see <a>celebrities-procedure-image</a>.
            </para>
             
            <para>
            This operation requires permissions to perform the <code>rekognition:RecognizeCelebrities</code>
            operation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.RecognizeCelebritiesRequest.Image">
            <summary>
            Gets and sets the property Image. 
            <para>
            The input image as base64-encoded bytes or an S3 object. If you use the AWS CLI to
            call Amazon Rekognition operations, passing base64-encoded image bytes is not supported.
            
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.RecognizeCelebritiesResponse">
            <summary>
            This is the response object from the RecognizeCelebrities operation.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.RecognizeCelebritiesResponse.CelebrityFaces">
            <summary>
            Gets and sets the property CelebrityFaces. 
            <para>
            Details about each celebrity found in the image. Amazon Rekognition can detect a maximum
            of 15 celebrities in an image.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.RecognizeCelebritiesResponse.OrientationCorrection">
            <summary>
            Gets and sets the property OrientationCorrection. 
            <para>
            The orientation of the input image (counterclockwise direction). If your application
            displays the image, you can use this value to correct the orientation. The bounding
            box coordinates returned in <code>CelebrityFaces</code> and <code>UnrecognizedFaces</code>
            represent face locations before the image orientation is corrected. 
            </para>
             <note> 
            <para>
            If the input image is in .jpeg format, it might contain exchangeable image (Exif)
            metadata that includes the image's orientation. If so, and the Exif metadata for the
            input image populates the orientation field, the value of <code>OrientationCorrection</code>
            is null and the <code>CelebrityFaces</code> and <code>UnrecognizedFaces</code> bounding
            box coordinates represent face locations after Exif metadata is used to correct the
            image orientation. Images in .png format don't contain Exif metadata. 
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.RecognizeCelebritiesResponse.UnrecognizedFaces">
            <summary>
            Gets and sets the property UnrecognizedFaces. 
            <para>
            Details about each unrecognized face in the image.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.ResourceAlreadyExistsException">
            <summary>
             Rekognition exception
             </summary>
        </member>
        <member name="M:Amazon.Rekognition.Model.ResourceAlreadyExistsException.#ctor(System.String)">
            <summary>
            Constructs a new ResourceAlreadyExistsException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Rekognition.Model.ResourceAlreadyExistsException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ResourceAlreadyExistsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Rekognition.Model.ResourceAlreadyExistsException.#ctor(System.Exception)">
            <summary>
            Construct instance of ResourceAlreadyExistsException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Rekognition.Model.ResourceAlreadyExistsException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceAlreadyExistsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Rekognition.Model.ResourceAlreadyExistsException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceAlreadyExistsException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.Rekognition.Model.ResourceInUseException">
            <summary>
             Rekognition exception
             </summary>
        </member>
        <member name="M:Amazon.Rekognition.Model.ResourceInUseException.#ctor(System.String)">
            <summary>
            Constructs a new ResourceInUseException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Rekognition.Model.ResourceInUseException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ResourceInUseException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Rekognition.Model.ResourceInUseException.#ctor(System.Exception)">
            <summary>
            Construct instance of ResourceInUseException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Rekognition.Model.ResourceInUseException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceInUseException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Rekognition.Model.ResourceInUseException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceInUseException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.Rekognition.Model.ResourceNotFoundException">
            <summary>
             Rekognition exception
             </summary>
        </member>
        <member name="M:Amazon.Rekognition.Model.ResourceNotFoundException.#ctor(System.String)">
            <summary>
            Constructs a new ResourceNotFoundException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Rekognition.Model.ResourceNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Rekognition.Model.ResourceNotFoundException.#ctor(System.Exception)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Rekognition.Model.ResourceNotFoundException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Rekognition.Model.ResourceNotFoundException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.Rekognition.Model.S3Object">
            <summary>
            Provides the S3 bucket name and object name.
            
             
            <para>
            The region for the S3 bucket containing the S3 object must match the region you use
            for Amazon Rekognition operations.
            </para>
             
            <para>
            For Amazon Rekognition to process an S3 object, the user must have permission to access
            the S3 object. For more information, see <a>manage-access-resource-policies</a>. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.S3Object.Bucket">
            <summary>
            Gets and sets the property Bucket. 
            <para>
            Name of the S3 bucket.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.S3Object.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            S3 object key name.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.S3Object.Version">
            <summary>
            Gets and sets the property Version. 
            <para>
            If the bucket is versioning enabled, you can specify the object version. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.SearchFacesByImageRequest">
            <summary>
            Container for the parameters to the SearchFacesByImage operation.
            For a given input image, first detects the largest face in the image, and then searches
            the specified collection for matching faces. The operation compares the features of
            the input face with faces in the specified collection. 
            
             <note> 
            <para>
             To search for all faces in an input image, you might first call the operation, and
            then use the face IDs returned in subsequent calls to the operation. 
            </para>
             
            <para>
             You can also call the <code>DetectFaces</code> operation and use the bounding boxes
            in the response to make face crops, which then you can pass in to the <code>SearchFacesByImage</code>
            operation. 
            </para>
             </note> 
            <para>
            You pass the input image either as base64-encoded image bytes or as a reference to
            an image in an Amazon S3 bucket. If you use the Amazon CLI to call Amazon Rekognition
            operations, passing image bytes is not supported. The image must be either a PNG or
            JPEG formatted file. 
            </para>
             
            <para>
             The response returns an array of faces that match, ordered by similarity score with
            the highest similarity first. More specifically, it is an array of metadata for each
            face match found. Along with the metadata, the response also includes a <code>similarity</code>
            indicating how similar the face is to the input face. In the response, the operation
            also returns the bounding box (and a confidence level that the bounding box contains
            a face) of the face that Amazon Rekognition used for the input image. 
            </para>
             
            <para>
            For an example, see <a>search-face-with-image-procedure</a>.
            </para>
             
            <para>
            This operation requires permissions to perform the <code>rekognition:SearchFacesByImage</code>
            action.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.SearchFacesByImageRequest.CollectionId">
            <summary>
            Gets and sets the property CollectionId. 
            <para>
            ID of the collection to search.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.SearchFacesByImageRequest.FaceMatchThreshold">
            <summary>
            Gets and sets the property FaceMatchThreshold. 
            <para>
            (Optional) Specifies the minimum confidence in the face match to return. For example,
            don't return any matches where confidence in matches is less than 70%.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.SearchFacesByImageRequest.Image">
            <summary>
            Gets and sets the property Image. 
            <para>
            The input image as base64-encoded bytes or an S3 object. If you use the AWS CLI to
            call Amazon Rekognition operations, passing base64-encoded image bytes is not supported.
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.SearchFacesByImageRequest.MaxFaces">
            <summary>
            Gets and sets the property MaxFaces. 
            <para>
            Maximum number of faces to return. The operation returns the maximum number of faces
            with the highest confidence in the match.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.SearchFacesByImageResponse">
            <summary>
            This is the response object from the SearchFacesByImage operation.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.SearchFacesByImageResponse.FaceMatches">
            <summary>
            Gets and sets the property FaceMatches. 
            <para>
            An array of faces that match the input face, along with the confidence in the match.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.SearchFacesByImageResponse.FaceModelVersion">
            <summary>
            Gets and sets the property FaceModelVersion. 
            <para>
            Version number of the face detection model associated with the input collection (<code>CollectionId</code>).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.SearchFacesByImageResponse.SearchedFaceBoundingBox">
            <summary>
            Gets and sets the property SearchedFaceBoundingBox. 
            <para>
            The bounding box around the face in the input image that Amazon Rekognition used for
            the search.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.SearchFacesByImageResponse.SearchedFaceConfidence">
            <summary>
            Gets and sets the property SearchedFaceConfidence. 
            <para>
            The level of confidence that the <code>searchedFaceBoundingBox</code>, contains a
            face.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.SearchFacesRequest">
            <summary>
            Container for the parameters to the SearchFaces operation.
            For a given input face ID, searches for matching faces in the collection the face
            belongs to. You get a face ID when you add a face to the collection using the <a>IndexFaces</a>
            operation. The operation compares the features of the input face with faces in the
            specified collection. 
            
             <note> 
            <para>
            You can also search faces without indexing faces by using the <code>SearchFacesByImage</code>
            operation.
            </para>
             </note> 
            <para>
             The operation response returns an array of faces that match, ordered by similarity
            score with the highest similarity first. More specifically, it is an array of metadata
            for each face match that is found. Along with the metadata, the response also includes
            a <code>confidence</code> value for each face match, indicating the confidence that
            the specific face matches the input face. 
            </para>
             
            <para>
            For an example, see <a>search-face-with-id-procedure</a>.
            </para>
             
            <para>
            This operation requires permissions to perform the <code>rekognition:SearchFaces</code>
            action.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.SearchFacesRequest.CollectionId">
            <summary>
            Gets and sets the property CollectionId. 
            <para>
            ID of the collection the face belongs to.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.SearchFacesRequest.FaceId">
            <summary>
            Gets and sets the property FaceId. 
            <para>
            ID of a face to find matches for in the collection.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.SearchFacesRequest.FaceMatchThreshold">
            <summary>
            Gets and sets the property FaceMatchThreshold. 
            <para>
            Optional value specifying the minimum confidence in the face match to return. For
            example, don't return any matches where confidence in matches is less than 70%.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.SearchFacesRequest.MaxFaces">
            <summary>
            Gets and sets the property MaxFaces. 
            <para>
            Maximum number of faces to return. The operation returns the maximum number of faces
            with the highest confidence in the match.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.SearchFacesResponse">
            <summary>
            This is the response object from the SearchFaces operation.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.SearchFacesResponse.FaceMatches">
            <summary>
            Gets and sets the property FaceMatches. 
            <para>
            An array of faces that matched the input face, along with the confidence in the match.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.SearchFacesResponse.FaceModelVersion">
            <summary>
            Gets and sets the property FaceModelVersion. 
            <para>
            Version number of the face detection model associated with the input collection (<code>CollectionId</code>).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.SearchFacesResponse.SearchedFaceId">
            <summary>
            Gets and sets the property SearchedFaceId. 
            <para>
            ID of the face that was searched for matches in a collection.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.Smile">
            <summary>
            Indicates whether or not the face is smiling, and the confidence level in the determination.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.Smile.Confidence">
            <summary>
            Gets and sets the property Confidence. 
            <para>
            Level of confidence in the determination.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.Smile.Value">
            <summary>
            Gets and sets the property Value. 
            <para>
            Boolean value that indicates whether the face is smiling or not.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.StartCelebrityRecognitionRequest">
            <summary>
            Container for the parameters to the StartCelebrityRecognition operation.
            Starts asynchronous recognition of celebrities in a stored video.
            
             
            <para>
            Rekognition Video can detect celebrities in a video must be stored in an Amazon S3
            bucket. Use <a>Video</a> to specify the bucket name and the filename of the video.
            <code>StartCelebrityRecognition</code> returns a job identifier (<code>JobId</code>)
            which you use to get the results of the analysis. When celebrity recognition analysis
            is finished, Rekognition Video publishes a completion status to the Amazon Simple
            Notification Service topic that you specify in <code>NotificationChannel</code>. To
            get the results of the celebrity recognition analysis, first check that the status
            value published to the Amazon SNS topic is <code>SUCCEEDED</code>. If so, call and
            pass the job identifier (<code>JobId</code>) from the initial call to <code>StartCelebrityRecognition</code>.
            For more information, see <a>celebrities</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.StartCelebrityRecognitionRequest.ClientRequestToken">
            <summary>
            Gets and sets the property ClientRequestToken. 
            <para>
            Idempotent token used to identify the start request. If you use the same token with
            multiple <code>StartCelebrityRecognition</code> requests, the same <code>JobId</code>
            is returned. Use <code>ClientRequestToken</code> to prevent the same job from being
            accidently started more than once. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.StartCelebrityRecognitionRequest.JobTag">
            <summary>
            Gets and sets the property JobTag. 
            <para>
            Unique identifier you specify to identify the job in the completion status published
            to the Amazon Simple Notification Service topic. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.StartCelebrityRecognitionRequest.NotificationChannel">
            <summary>
            Gets and sets the property NotificationChannel. 
            <para>
            The Amazon SNS topic ARN that you want Rekognition Video to publish the completion
            status of the celebrity recognition analysis to.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.StartCelebrityRecognitionRequest.Video">
            <summary>
            Gets and sets the property Video. 
            <para>
            The video in which you want to recognize celebrities. The video must be stored in
            an Amazon S3 bucket.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.StartCelebrityRecognitionResponse">
            <summary>
            This is the response object from the StartCelebrityRecognition operation.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.StartCelebrityRecognitionResponse.JobId">
            <summary>
            Gets and sets the property JobId. 
            <para>
            The identifier for the celebrity recognition analysis job. Use <code>JobId</code>
            to identify the job in a subsequent call to <code>GetCelebrityRecognition</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.StartContentModerationRequest">
            <summary>
            Container for the parameters to the StartContentModeration operation.
            Starts asynchronous detection of explicit or suggestive adult content in a stored
            video.
            
             
            <para>
            Rekognition Video can moderate content in a video stored in an Amazon S3 bucket. Use
            <a>Video</a> to specify the bucket name and the filename of the video. <code>StartContentModeration</code>
            returns a job identifier (<code>JobId</code>) which you use to get the results of
            the analysis. When content moderation analysis is finished, Rekognition Video publishes
            a completion status to the Amazon Simple Notification Service topic that you specify
            in <code>NotificationChannel</code>.
            </para>
             
            <para>
            To get the results of the content moderation analysis, first check that the status
            value published to the Amazon SNS topic is <code>SUCCEEDED</code>. If so, call and
            pass the job identifier (<code>JobId</code>) from the initial call to <code>StartContentModeration</code>.
            For more information, see <a>moderation</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.StartContentModerationRequest.ClientRequestToken">
            <summary>
            Gets and sets the property ClientRequestToken. 
            <para>
            Idempotent token used to identify the start request. If you use the same token with
            multiple <code>StartContentModeration</code> requests, the same <code>JobId</code>
            is returned. Use <code>ClientRequestToken</code> to prevent the same job from being
            accidently started more than once. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.StartContentModerationRequest.JobTag">
            <summary>
            Gets and sets the property JobTag. 
            <para>
            Unique identifier you specify to identify the job in the completion status published
            to the Amazon Simple Notification Service topic. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.StartContentModerationRequest.MinConfidence">
            <summary>
            Gets and sets the property MinConfidence. 
            <para>
            Specifies the minimum confidence that Amazon Rekognition must have in order to return
            a moderated content label. Confidence represents how certain Amazon Rekognition is
            that the moderated content is correctly identified. 0 is the lowest confidence. 100
            is the highest confidence. Amazon Rekognition doesn't return any moderated content
            labels with a confidence level lower than this specified value.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.StartContentModerationRequest.NotificationChannel">
            <summary>
            Gets and sets the property NotificationChannel. 
            <para>
            The Amazon SNS topic ARN that you want Rekognition Video to publish the completion
            status of the content moderation analysis to.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.StartContentModerationRequest.Video">
            <summary>
            Gets and sets the property Video. 
            <para>
            The video in which you want to moderate content. The video must be stored in an Amazon
            S3 bucket.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.StartContentModerationResponse">
            <summary>
            This is the response object from the StartContentModeration operation.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.StartContentModerationResponse.JobId">
            <summary>
            Gets and sets the property JobId. 
            <para>
            The identifier for the content moderation analysis job. Use <code>JobId</code> to
            identify the job in a subsequent call to <code>GetContentModeration</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.StartFaceDetectionRequest">
            <summary>
            Container for the parameters to the StartFaceDetection operation.
            Starts asynchronous detection of faces in a stored video.
            
             
            <para>
            Rekognition Video can detect faces in a video stored in an Amazon S3 bucket. Use <a>Video</a>
            to specify the bucket name and the filename of the video. <code>StartFaceDetection</code>
            returns a job identifier (<code>JobId</code>) that you use to get the results of the
            operation. When face detection is finished, Rekognition Video publishes a completion
            status to the Amazon Simple Notification Service topic that you specify in <code>NotificationChannel</code>.
            To get the results of the label detection operation, first check that the status value
            published to the Amazon SNS topic is <code>SUCCEEDED</code>. If so, call and pass
            the job identifier (<code>JobId</code>) from the initial call to <code>StartFaceDetection</code>.
            For more information, see <a>faces-video</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.StartFaceDetectionRequest.ClientRequestToken">
            <summary>
            Gets and sets the property ClientRequestToken. 
            <para>
            Idempotent token used to identify the start request. If you use the same token with
            multiple <code>StartFaceDetection</code> requests, the same <code>JobId</code> is
            returned. Use <code>ClientRequestToken</code> to prevent the same job from being accidently
            started more than once. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.StartFaceDetectionRequest.FaceAttributes">
            <summary>
            Gets and sets the property FaceAttributes. 
            <para>
            The face attributes you want returned.
            </para>
             
            <para>
             <code>DEFAULT</code> - The following subset of facial attributes are returned: BoundingBox,
            Confidence, Pose, Quality and Landmarks. 
            </para>
             
            <para>
             <code>ALL</code> - All facial attributes are returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.StartFaceDetectionRequest.JobTag">
            <summary>
            Gets and sets the property JobTag. 
            <para>
            Unique identifier you specify to identify the job in the completion status published
            to the Amazon Simple Notification Service topic. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.StartFaceDetectionRequest.NotificationChannel">
            <summary>
            Gets and sets the property NotificationChannel. 
            <para>
            The ARN of the Amazon SNS topic to which you want Rekognition Video to publish the
            completion status of the face detection operation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.StartFaceDetectionRequest.Video">
            <summary>
            Gets and sets the property Video. 
            <para>
            The video in which you want to detect faces. The video must be stored in an Amazon
            S3 bucket.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.StartFaceDetectionResponse">
            <summary>
            This is the response object from the StartFaceDetection operation.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.StartFaceDetectionResponse.JobId">
            <summary>
            Gets and sets the property JobId. 
            <para>
            The identifier for the face detection job. Use <code>JobId</code> to identify the
            job in a subsequent call to <code>GetFaceDetection</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.StartFaceSearchRequest">
            <summary>
            Container for the parameters to the StartFaceSearch operation.
            Starts the asynchronous search for faces in a collection that match the faces of persons
            detected in a stored video.
            
             
            <para>
            The video must be stored in an Amazon S3 bucket. Use <a>Video</a> to specify the bucket
            name and the filename of the video. <code>StartFaceSearch</code> returns a job identifier
            (<code>JobId</code>) which you use to get the search results once the search has completed.
            When searching is finished, Rekognition Video publishes a completion status to the
            Amazon Simple Notification Service topic that you specify in <code>NotificationChannel</code>.
            To get the search results, first check that the status value published to the Amazon
            SNS topic is <code>SUCCEEDED</code>. If so, call and pass the job identifier (<code>JobId</code>)
            from the initial call to <code>StartFaceSearch</code>. For more information, see <a>collections-search-person</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.StartFaceSearchRequest.ClientRequestToken">
            <summary>
            Gets and sets the property ClientRequestToken. 
            <para>
            Idempotent token used to identify the start request. If you use the same token with
            multiple <code>StartFaceSearch</code> requests, the same <code>JobId</code> is returned.
            Use <code>ClientRequestToken</code> to prevent the same job from being accidently
            started more than once. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.StartFaceSearchRequest.CollectionId">
            <summary>
            Gets and sets the property CollectionId. 
            <para>
            ID of the collection that contains the faces you want to search for.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.StartFaceSearchRequest.FaceMatchThreshold">
            <summary>
            Gets and sets the property FaceMatchThreshold. 
            <para>
            The minimum confidence in the person match to return. For example, don't return any
            matches where confidence in matches is less than 70%. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.StartFaceSearchRequest.JobTag">
            <summary>
            Gets and sets the property JobTag. 
            <para>
            Unique identifier you specify to identify the job in the completion status published
            to the Amazon Simple Notification Service topic. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.StartFaceSearchRequest.NotificationChannel">
            <summary>
            Gets and sets the property NotificationChannel. 
            <para>
            The ARN of the Amazon SNS topic to which you want Rekognition Video to publish the
            completion status of the search. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.StartFaceSearchRequest.Video">
            <summary>
            Gets and sets the property Video. 
            <para>
            The video you want to search. The video must be stored in an Amazon S3 bucket. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.StartFaceSearchResponse">
            <summary>
            This is the response object from the StartFaceSearch operation.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.StartFaceSearchResponse.JobId">
            <summary>
            Gets and sets the property JobId. 
            <para>
            The identifier for the search job. Use <code>JobId</code> to identify the job in a
            subsequent call to <code>GetFaceSearch</code>. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.StartLabelDetectionRequest">
            <summary>
            Container for the parameters to the StartLabelDetection operation.
            Starts asynchronous detection of labels in a stored video.
            
             
            <para>
            Rekognition Video can detect labels in a video. Labels are instances of real-world
            entities. This includes objects like flower, tree, and table; events like wedding,
            graduation, and birthday party; concepts like landscape, evening, and nature; and
            activities like a person getting out of a car or a person skiing.
            </para>
             
            <para>
            The video must be stored in an Amazon S3 bucket. Use <a>Video</a> to specify the bucket
            name and the filename of the video. <code>StartLabelDetection</code> returns a job
            identifier (<code>JobId</code>) which you use to get the results of the operation.
            When label detection is finished, Rekognition Video publishes a completion status
            to the Amazon Simple Notification Service topic that you specify in <code>NotificationChannel</code>.
            </para>
             
            <para>
            To get the results of the label detection operation, first check that the status value
            published to the Amazon SNS topic is <code>SUCCEEDED</code>. If so, call and pass
            the job identifier (<code>JobId</code>) from the initial call to <code>StartLabelDetection</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.StartLabelDetectionRequest.ClientRequestToken">
            <summary>
            Gets and sets the property ClientRequestToken. 
            <para>
            Idempotent token used to identify the start request. If you use the same token with
            multiple <code>StartLabelDetection</code> requests, the same <code>JobId</code> is
            returned. Use <code>ClientRequestToken</code> to prevent the same job from being accidently
            started more than once. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.StartLabelDetectionRequest.JobTag">
            <summary>
            Gets and sets the property JobTag. 
            <para>
            Unique identifier you specify to identify the job in the completion status published
            to the Amazon Simple Notification Service topic. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.StartLabelDetectionRequest.MinConfidence">
            <summary>
            Gets and sets the property MinConfidence. 
            <para>
            Specifies the minimum confidence that Rekognition Video must have in order to return
            a detected label. Confidence represents how certain Amazon Rekognition is that a label
            is correctly identified.0 is the lowest confidence. 100 is the highest confidence.
            Rekognition Video doesn't return any labels with a confidence level lower than this
            specified value.
            </para>
             
            <para>
            If you don't specify <code>MinConfidence</code>, the operation returns labels with
            confidence values greater than or equal to 50 percent.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.StartLabelDetectionRequest.NotificationChannel">
            <summary>
            Gets and sets the property NotificationChannel. 
            <para>
            The Amazon SNS topic ARN you want Rekognition Video to publish the completion status
            of the label detection operation to. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.StartLabelDetectionRequest.Video">
            <summary>
            Gets and sets the property Video. 
            <para>
            The video in which you want to detect labels. The video must be stored in an Amazon
            S3 bucket.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.StartLabelDetectionResponse">
            <summary>
            This is the response object from the StartLabelDetection operation.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.StartLabelDetectionResponse.JobId">
            <summary>
            Gets and sets the property JobId. 
            <para>
            The identifier for the label detection job. Use <code>JobId</code> to identify the
            job in a subsequent call to <code>GetLabelDetection</code>. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.StartPersonTrackingRequest">
            <summary>
            Container for the parameters to the StartPersonTracking operation.
            Starts the asynchronous tracking of persons in a stored video.
            
             
            <para>
            Rekognition Video can track persons in a video stored in an Amazon S3 bucket. Use
            <a>Video</a> to specify the bucket name and the filename of the video. <code>StartPersonTracking</code>
            returns a job identifier (<code>JobId</code>) which you use to get the results of
            the operation. When label detection is finished, Amazon Rekognition publishes a completion
            status to the Amazon Simple Notification Service topic that you specify in <code>NotificationChannel</code>.
            
            </para>
             
            <para>
            To get the results of the person detection operation, first check that the status
            value published to the Amazon SNS topic is <code>SUCCEEDED</code>. If so, call and
            pass the job identifier (<code>JobId</code>) from the initial call to <code>StartPersonTracking</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.StartPersonTrackingRequest.ClientRequestToken">
            <summary>
            Gets and sets the property ClientRequestToken. 
            <para>
            Idempotent token used to identify the start request. If you use the same token with
            multiple <code>StartPersonTracking</code> requests, the same <code>JobId</code> is
            returned. Use <code>ClientRequestToken</code> to prevent the same job from being accidently
            started more than once. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.StartPersonTrackingRequest.JobTag">
            <summary>
            Gets and sets the property JobTag. 
            <para>
            Unique identifier you specify to identify the job in the completion status published
            to the Amazon Simple Notification Service topic. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.StartPersonTrackingRequest.NotificationChannel">
            <summary>
            Gets and sets the property NotificationChannel. 
            <para>
            The Amazon SNS topic ARN you want Rekognition Video to publish the completion status
            of the people detection operation to.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.StartPersonTrackingRequest.Video">
            <summary>
            Gets and sets the property Video. 
            <para>
            The video in which you want to detect people. The video must be stored in an Amazon
            S3 bucket.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.StartPersonTrackingResponse">
            <summary>
            This is the response object from the StartPersonTracking operation.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.StartPersonTrackingResponse.JobId">
            <summary>
            Gets and sets the property JobId. 
            <para>
            The identifier for the person detection job. Use <code>JobId</code> to identify the
            job in a subsequent call to <code>GetPersonTracking</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.StartStreamProcessorRequest">
            <summary>
            Container for the parameters to the StartStreamProcessor operation.
            Starts processing a stream processor. You create a stream processor by calling . To
            tell <code>StartStreamProcessor</code> which stream processor to start, use the value
            of the <code>Name</code> field specified in the call to <code>CreateStreamProcessor</code>.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.StartStreamProcessorRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the stream processor to start processing.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.StartStreamProcessorResponse">
            <summary>
            This is the response object from the StartStreamProcessor operation.
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.StopStreamProcessorRequest">
            <summary>
            Container for the parameters to the StopStreamProcessor operation.
            Stops a running stream processor that was created by .
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.StopStreamProcessorRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of a stream processor created by .
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.StopStreamProcessorResponse">
            <summary>
            This is the response object from the StopStreamProcessor operation.
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.StreamProcessor">
            <summary>
            An object that recognizes faces in a streaming video. An Amazon Rekognition stream
            processor is created by a call to . The request parameters for <code>CreateStreamProcessor</code>
            describe the Kinesis video stream source for the streaming video, face recognition
            parameters, and where to stream the analysis resullts.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.StreamProcessor.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            Name of the Amazon Rekognition stream processor. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.StreamProcessor.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            Current status of the Amazon Rekognition stream processor.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.StreamProcessorInput">
            <summary>
            Information about the source streaming video.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.StreamProcessorInput.KinesisVideoStream">
            <summary>
            Gets and sets the property KinesisVideoStream. 
            <para>
            The Kinesis video stream input stream for the source streaming video.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.StreamProcessorOutput">
            <summary>
            Information about the Amazon Kinesis Data Streams stream to which a Rekognition Video
            stream processor streams the results of a video analysis. For more information, see
            .
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.StreamProcessorOutput.KinesisDataStream">
            <summary>
            Gets and sets the property KinesisDataStream. 
            <para>
            The Amazon Kinesis Data Streams stream to which the Amazon Rekognition stream processor
            streams the analysis results.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.StreamProcessorSettings">
            <summary>
            Input parameters used to recognize faces in a streaming video analyzed by a Amazon
            Rekognition stream processor.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.StreamProcessorSettings.FaceSearch">
            <summary>
            Gets and sets the property FaceSearch. 
            <para>
            Face search settings to use on a streaming video. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.Sunglasses">
            <summary>
            Indicates whether or not the face is wearing sunglasses, and the confidence level
            in the determination.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.Sunglasses.Confidence">
            <summary>
            Gets and sets the property Confidence. 
            <para>
            Level of confidence in the determination.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.Sunglasses.Value">
            <summary>
            Gets and sets the property Value. 
            <para>
            Boolean value that indicates whether the face is wearing sunglasses or not.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.TextDetection">
            <summary>
            Information about a word or line of text detected by .
            
             
            <para>
            The <code>DetectedText</code> field contains the text that Amazon Rekognition detected
            in the image. 
            </para>
             
            <para>
            Every word and line has an identifier (<code>Id</code>). Each word belongs to a line
            and has a parent identifier (<code>ParentId</code>) that identifies the line of text
            in which the word appears. The word <code>Id</code> is also an index for the word
            within a line of words. 
            </para>
             
            <para>
            For more information, see <a>text-detection</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.TextDetection.Confidence">
            <summary>
            Gets and sets the property Confidence. 
            <para>
            The confidence that Amazon Rekognition has in the accuracy of the detected text and
            the accuracy of the geometry points around the detected text.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.TextDetection.DetectedText">
            <summary>
            Gets and sets the property DetectedText. 
            <para>
            The word or line of text recognized by Amazon Rekognition. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.TextDetection.Geometry">
            <summary>
            Gets and sets the property Geometry. 
            <para>
            The location of the detected text on the image. Includes an axis aligned coarse bounding
            box surrounding the text and a finer grain polygon for more accurate spatial information.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.TextDetection.Id">
            <summary>
            Gets and sets the property Id. 
            <para>
            The identifier for the detected text. The identifier is only unique for a single call
            to <code>DetectText</code>. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.TextDetection.ParentId">
            <summary>
            Gets and sets the property ParentId. 
            <para>
            The Parent identifier for the detected text identified by the value of <code>ID</code>.
            If the type of detected text is <code>LINE</code>, the value of <code>ParentId</code>
            is <code>Null</code>. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.TextDetection.Type">
            <summary>
            Gets and sets the property Type. 
            <para>
            The type of text that was detected.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.ThrottlingException">
            <summary>
             Rekognition exception
             </summary>
        </member>
        <member name="M:Amazon.Rekognition.Model.ThrottlingException.#ctor(System.String)">
            <summary>
            Constructs a new ThrottlingException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Rekognition.Model.ThrottlingException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ThrottlingException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Rekognition.Model.ThrottlingException.#ctor(System.Exception)">
            <summary>
            Construct instance of ThrottlingException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Rekognition.Model.ThrottlingException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ThrottlingException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Rekognition.Model.ThrottlingException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ThrottlingException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.Rekognition.Model.Video">
            <summary>
            Video file stored in an Amazon S3 bucket. Amazon Rekognition video start operations
            such as use <code>Video</code> to specify a video for analysis. The supported file
            formats are .mp4, .mov and .avi.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.Video.S3Object">
            <summary>
            Gets and sets the property S3Object. 
            <para>
            The Amazon S3 bucket name and file name for the video.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.VideoMetadata">
            <summary>
            Information about a video that Amazon Rekognition analyzed. <code>Videometadata</code>
            is returned in every page of paginated responses from a Amazon Rekognition video operation.
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.VideoMetadata.Codec">
            <summary>
            Gets and sets the property Codec. 
            <para>
            Type of compression used in the analyzed video. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.VideoMetadata.DurationMillis">
            <summary>
            Gets and sets the property DurationMillis. 
            <para>
            Length of the video in milliseconds.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.VideoMetadata.Format">
            <summary>
            Gets and sets the property Format. 
            <para>
            Format of the analyzed video. Possible values are MP4, MOV and AVI. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.VideoMetadata.FrameHeight">
            <summary>
            Gets and sets the property FrameHeight. 
            <para>
            Vertical pixel dimension of the video.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.VideoMetadata.FrameRate">
            <summary>
            Gets and sets the property FrameRate. 
            <para>
            Number of frames per second in the video.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Rekognition.Model.VideoMetadata.FrameWidth">
            <summary>
            Gets and sets the property FrameWidth. 
            <para>
            Horizontal pixel dimension of the video.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Model.VideoTooLargeException">
            <summary>
             Rekognition exception
             </summary>
        </member>
        <member name="M:Amazon.Rekognition.Model.VideoTooLargeException.#ctor(System.String)">
            <summary>
            Constructs a new VideoTooLargeException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Rekognition.Model.VideoTooLargeException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of VideoTooLargeException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Rekognition.Model.VideoTooLargeException.#ctor(System.Exception)">
            <summary>
            Construct instance of VideoTooLargeException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Rekognition.Model.VideoTooLargeException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of VideoTooLargeException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Rekognition.Model.VideoTooLargeException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of VideoTooLargeException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.Rekognition.AmazonRekognitionRequest">
            <summary>
            Base class for Rekognition operation requests.
            </summary>
        </member>
        <member name="T:Amazon.Rekognition.Attribute">
            <summary>
            Constants used for properties of type Attribute.
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.Attribute.ALL">
            <summary>
            Constant ALL for Attribute
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.Attribute.DEFAULT">
            <summary>
            Constant DEFAULT for Attribute
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.Attribute.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.Attribute.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Rekognition.Attribute.op_Implicit(System.String)~Amazon.Rekognition.Attribute">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Rekognition.CelebrityRecognitionSortBy">
            <summary>
            Constants used for properties of type CelebrityRecognitionSortBy.
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.CelebrityRecognitionSortBy.ID">
            <summary>
            Constant ID for CelebrityRecognitionSortBy
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.CelebrityRecognitionSortBy.TIMESTAMP">
            <summary>
            Constant TIMESTAMP for CelebrityRecognitionSortBy
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.CelebrityRecognitionSortBy.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.CelebrityRecognitionSortBy.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Rekognition.CelebrityRecognitionSortBy.op_Implicit(System.String)~Amazon.Rekognition.CelebrityRecognitionSortBy">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Rekognition.ContentModerationSortBy">
            <summary>
            Constants used for properties of type ContentModerationSortBy.
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.ContentModerationSortBy.NAME">
            <summary>
            Constant NAME for ContentModerationSortBy
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.ContentModerationSortBy.TIMESTAMP">
            <summary>
            Constant TIMESTAMP for ContentModerationSortBy
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.ContentModerationSortBy.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.ContentModerationSortBy.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Rekognition.ContentModerationSortBy.op_Implicit(System.String)~Amazon.Rekognition.ContentModerationSortBy">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Rekognition.EmotionName">
            <summary>
            Constants used for properties of type EmotionName.
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.EmotionName.ANGRY">
            <summary>
            Constant ANGRY for EmotionName
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.EmotionName.CALM">
            <summary>
            Constant CALM for EmotionName
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.EmotionName.CONFUSED">
            <summary>
            Constant CONFUSED for EmotionName
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.EmotionName.DISGUSTED">
            <summary>
            Constant DISGUSTED for EmotionName
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.EmotionName.HAPPY">
            <summary>
            Constant HAPPY for EmotionName
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.EmotionName.SAD">
            <summary>
            Constant SAD for EmotionName
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.EmotionName.SURPRISED">
            <summary>
            Constant SURPRISED for EmotionName
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.EmotionName.UNKNOWN">
            <summary>
            Constant UNKNOWN for EmotionName
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.EmotionName.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.EmotionName.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Rekognition.EmotionName.op_Implicit(System.String)~Amazon.Rekognition.EmotionName">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Rekognition.FaceAttributes">
            <summary>
            Constants used for properties of type FaceAttributes.
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.FaceAttributes.ALL">
            <summary>
            Constant ALL for FaceAttributes
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.FaceAttributes.DEFAULT">
            <summary>
            Constant DEFAULT for FaceAttributes
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.FaceAttributes.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.FaceAttributes.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Rekognition.FaceAttributes.op_Implicit(System.String)~Amazon.Rekognition.FaceAttributes">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Rekognition.FaceSearchSortBy">
            <summary>
            Constants used for properties of type FaceSearchSortBy.
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.FaceSearchSortBy.INDEX">
            <summary>
            Constant INDEX for FaceSearchSortBy
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.FaceSearchSortBy.TIMESTAMP">
            <summary>
            Constant TIMESTAMP for FaceSearchSortBy
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.FaceSearchSortBy.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.FaceSearchSortBy.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Rekognition.FaceSearchSortBy.op_Implicit(System.String)~Amazon.Rekognition.FaceSearchSortBy">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Rekognition.GenderType">
            <summary>
            Constants used for properties of type GenderType.
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.GenderType.Female">
            <summary>
            Constant Female for GenderType
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.GenderType.Male">
            <summary>
            Constant Male for GenderType
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.GenderType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.GenderType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Rekognition.GenderType.op_Implicit(System.String)~Amazon.Rekognition.GenderType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Rekognition.LabelDetectionSortBy">
            <summary>
            Constants used for properties of type LabelDetectionSortBy.
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.LabelDetectionSortBy.NAME">
            <summary>
            Constant NAME for LabelDetectionSortBy
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.LabelDetectionSortBy.TIMESTAMP">
            <summary>
            Constant TIMESTAMP for LabelDetectionSortBy
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.LabelDetectionSortBy.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.LabelDetectionSortBy.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Rekognition.LabelDetectionSortBy.op_Implicit(System.String)~Amazon.Rekognition.LabelDetectionSortBy">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Rekognition.LandmarkType">
            <summary>
            Constants used for properties of type LandmarkType.
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.LandmarkType.EyeLeft">
            <summary>
            Constant EyeLeft for LandmarkType
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.LandmarkType.EyeRight">
            <summary>
            Constant EyeRight for LandmarkType
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.LandmarkType.LeftEyeBrowLeft">
            <summary>
            Constant LeftEyeBrowLeft for LandmarkType
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.LandmarkType.LeftEyeBrowRight">
            <summary>
            Constant LeftEyeBrowRight for LandmarkType
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.LandmarkType.LeftEyeBrowUp">
            <summary>
            Constant LeftEyeBrowUp for LandmarkType
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.LandmarkType.LeftEyeDown">
            <summary>
            Constant LeftEyeDown for LandmarkType
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.LandmarkType.LeftEyeLeft">
            <summary>
            Constant LeftEyeLeft for LandmarkType
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.LandmarkType.LeftEyeRight">
            <summary>
            Constant LeftEyeRight for LandmarkType
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.LandmarkType.LeftEyeUp">
            <summary>
            Constant LeftEyeUp for LandmarkType
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.LandmarkType.LeftPupil">
            <summary>
            Constant LeftPupil for LandmarkType
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.LandmarkType.MouthDown">
            <summary>
            Constant MouthDown for LandmarkType
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.LandmarkType.MouthLeft">
            <summary>
            Constant MouthLeft for LandmarkType
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.LandmarkType.MouthRight">
            <summary>
            Constant MouthRight for LandmarkType
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.LandmarkType.MouthUp">
            <summary>
            Constant MouthUp for LandmarkType
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.LandmarkType.Nose">
            <summary>
            Constant Nose for LandmarkType
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.LandmarkType.NoseLeft">
            <summary>
            Constant NoseLeft for LandmarkType
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.LandmarkType.NoseRight">
            <summary>
            Constant NoseRight for LandmarkType
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.LandmarkType.RightEyeBrowLeft">
            <summary>
            Constant RightEyeBrowLeft for LandmarkType
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.LandmarkType.RightEyeBrowRight">
            <summary>
            Constant RightEyeBrowRight for LandmarkType
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.LandmarkType.RightEyeBrowUp">
            <summary>
            Constant RightEyeBrowUp for LandmarkType
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.LandmarkType.RightEyeDown">
            <summary>
            Constant RightEyeDown for LandmarkType
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.LandmarkType.RightEyeLeft">
            <summary>
            Constant RightEyeLeft for LandmarkType
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.LandmarkType.RightEyeRight">
            <summary>
            Constant RightEyeRight for LandmarkType
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.LandmarkType.RightEyeUp">
            <summary>
            Constant RightEyeUp for LandmarkType
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.LandmarkType.RightPupil">
            <summary>
            Constant RightPupil for LandmarkType
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.LandmarkType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.LandmarkType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Rekognition.LandmarkType.op_Implicit(System.String)~Amazon.Rekognition.LandmarkType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Rekognition.OrientationCorrection">
            <summary>
            Constants used for properties of type OrientationCorrection.
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.OrientationCorrection.ROTATE_0">
            <summary>
            Constant ROTATE_0 for OrientationCorrection
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.OrientationCorrection.ROTATE_180">
            <summary>
            Constant ROTATE_180 for OrientationCorrection
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.OrientationCorrection.ROTATE_270">
            <summary>
            Constant ROTATE_270 for OrientationCorrection
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.OrientationCorrection.ROTATE_90">
            <summary>
            Constant ROTATE_90 for OrientationCorrection
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.OrientationCorrection.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.OrientationCorrection.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Rekognition.OrientationCorrection.op_Implicit(System.String)~Amazon.Rekognition.OrientationCorrection">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Rekognition.PersonTrackingSortBy">
            <summary>
            Constants used for properties of type PersonTrackingSortBy.
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.PersonTrackingSortBy.INDEX">
            <summary>
            Constant INDEX for PersonTrackingSortBy
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.PersonTrackingSortBy.TIMESTAMP">
            <summary>
            Constant TIMESTAMP for PersonTrackingSortBy
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.PersonTrackingSortBy.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.PersonTrackingSortBy.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Rekognition.PersonTrackingSortBy.op_Implicit(System.String)~Amazon.Rekognition.PersonTrackingSortBy">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Rekognition.StreamProcessorStatus">
            <summary>
            Constants used for properties of type StreamProcessorStatus.
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.StreamProcessorStatus.FAILED">
            <summary>
            Constant FAILED for StreamProcessorStatus
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.StreamProcessorStatus.RUNNING">
            <summary>
            Constant RUNNING for StreamProcessorStatus
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.StreamProcessorStatus.STARTING">
            <summary>
            Constant STARTING for StreamProcessorStatus
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.StreamProcessorStatus.STOPPED">
            <summary>
            Constant STOPPED for StreamProcessorStatus
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.StreamProcessorStatus.STOPPING">
            <summary>
            Constant STOPPING for StreamProcessorStatus
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.StreamProcessorStatus.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.StreamProcessorStatus.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Rekognition.StreamProcessorStatus.op_Implicit(System.String)~Amazon.Rekognition.StreamProcessorStatus">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Rekognition.TextTypes">
            <summary>
            Constants used for properties of type TextTypes.
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.TextTypes.LINE">
            <summary>
            Constant LINE for TextTypes
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.TextTypes.WORD">
            <summary>
            Constant WORD for TextTypes
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.TextTypes.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.TextTypes.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Rekognition.TextTypes.op_Implicit(System.String)~Amazon.Rekognition.TextTypes">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Rekognition.VideoJobStatus">
            <summary>
            Constants used for properties of type VideoJobStatus.
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.VideoJobStatus.FAILED">
            <summary>
            Constant FAILED for VideoJobStatus
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.VideoJobStatus.IN_PROGRESS">
            <summary>
            Constant IN_PROGRESS for VideoJobStatus
            </summary>
        </member>
        <member name="F:Amazon.Rekognition.VideoJobStatus.SUCCEEDED">
            <summary>
            Constant SUCCEEDED for VideoJobStatus
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.VideoJobStatus.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.VideoJobStatus.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Rekognition.VideoJobStatus.op_Implicit(System.String)~Amazon.Rekognition.VideoJobStatus">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Rekognition.AmazonRekognitionClient">
             <summary>
             Implementation for accessing Rekognition
            
             This is the Amazon Rekognition API reference.
             </summary>
        </member>
        <member name="M:Amazon.Rekognition.AmazonRekognitionClient.#ctor">
             <summary>
             Constructs AmazonRekognitionClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
        </member>
        <member name="M:Amazon.Rekognition.AmazonRekognitionClient.#ctor(Amazon.RegionEndpoint)">
             <summary>
             Constructs AmazonRekognitionClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
             <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.Rekognition.AmazonRekognitionClient.#ctor(Amazon.Rekognition.AmazonRekognitionConfig)">
             <summary>
             Constructs AmazonRekognitionClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
             <param name="config">The AmazonRekognitionClient Configuration Object</param>
        </member>
        <member name="M:Amazon.Rekognition.AmazonRekognitionClient.#ctor(Amazon.Runtime.AWSCredentials)">
            <summary>
            Constructs AmazonRekognitionClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
        </member>
        <member name="M:Amazon.Rekognition.AmazonRekognitionClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonRekognitionClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.Rekognition.AmazonRekognitionClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.Rekognition.AmazonRekognitionConfig)">
            <summary>
            Constructs AmazonRekognitionClient with AWS Credentials and an
            AmazonRekognitionClient Configuration object.
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="clientConfig">The AmazonRekognitionClient Configuration Object</param>
        </member>
        <member name="M:Amazon.Rekognition.AmazonRekognitionClient.#ctor(System.String,System.String)">
            <summary>
            Constructs AmazonRekognitionClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
        </member>
        <member name="M:Amazon.Rekognition.AmazonRekognitionClient.#ctor(System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonRekognitionClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.Rekognition.AmazonRekognitionClient.#ctor(System.String,System.String,Amazon.Rekognition.AmazonRekognitionConfig)">
            <summary>
            Constructs AmazonRekognitionClient with AWS Access Key ID, AWS Secret Key and an
            AmazonRekognitionClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="clientConfig">The AmazonRekognitionClient Configuration Object</param>
        </member>
        <member name="M:Amazon.Rekognition.AmazonRekognitionClient.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructs AmazonRekognitionClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
        </member>
        <member name="M:Amazon.Rekognition.AmazonRekognitionClient.#ctor(System.String,System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonRekognitionClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.Rekognition.AmazonRekognitionClient.#ctor(System.String,System.String,System.String,Amazon.Rekognition.AmazonRekognitionConfig)">
            <summary>
            Constructs AmazonRekognitionClient with AWS Access Key ID, AWS Secret Key and an
            AmazonRekognitionClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="clientConfig">The AmazonRekognitionClient Configuration Object</param>
        </member>
        <member name="M:Amazon.Rekognition.AmazonRekognitionClient.CreateSigner">
            <summary>
            Creates the signer for the service.
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.AmazonRekognitionClient.Dispose(System.Boolean)">
            <summary>
            Disposes the service client.
            </summary>
        </member>
        <member name="M:Amazon.Rekognition.AmazonRekognitionClient.CompareFacesAsync(Amazon.Rekognition.Model.CompareFacesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CompareFaces operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CompareFaces operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/CompareFaces">REST API Reference for CompareFaces Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.AmazonRekognitionClient.CreateCollectionAsync(Amazon.Rekognition.Model.CreateCollectionRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateCollection operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateCollection operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/CreateCollection">REST API Reference for CreateCollection Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.AmazonRekognitionClient.CreateStreamProcessorAsync(Amazon.Rekognition.Model.CreateStreamProcessorRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateStreamProcessor operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateStreamProcessor operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/CreateStreamProcessor">REST API Reference for CreateStreamProcessor Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.AmazonRekognitionClient.DeleteCollectionAsync(Amazon.Rekognition.Model.DeleteCollectionRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteCollection operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteCollection operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/DeleteCollection">REST API Reference for DeleteCollection Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.AmazonRekognitionClient.DeleteFacesAsync(Amazon.Rekognition.Model.DeleteFacesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteFaces operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteFaces operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/DeleteFaces">REST API Reference for DeleteFaces Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.AmazonRekognitionClient.DeleteStreamProcessorAsync(Amazon.Rekognition.Model.DeleteStreamProcessorRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteStreamProcessor operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteStreamProcessor operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/DeleteStreamProcessor">REST API Reference for DeleteStreamProcessor Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.AmazonRekognitionClient.DescribeStreamProcessorAsync(Amazon.Rekognition.Model.DescribeStreamProcessorRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeStreamProcessor operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeStreamProcessor operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/DescribeStreamProcessor">REST API Reference for DescribeStreamProcessor Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.AmazonRekognitionClient.DetectFacesAsync(Amazon.Rekognition.Model.DetectFacesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DetectFaces operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DetectFaces operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/DetectFaces">REST API Reference for DetectFaces Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.AmazonRekognitionClient.DetectLabelsAsync(Amazon.Rekognition.Model.DetectLabelsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DetectLabels operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DetectLabels operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/DetectLabels">REST API Reference for DetectLabels Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.AmazonRekognitionClient.DetectModerationLabelsAsync(Amazon.Rekognition.Model.DetectModerationLabelsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DetectModerationLabels operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DetectModerationLabels operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/DetectModerationLabels">REST API Reference for DetectModerationLabels Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.AmazonRekognitionClient.DetectTextAsync(Amazon.Rekognition.Model.DetectTextRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DetectText operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DetectText operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/DetectText">REST API Reference for DetectText Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.AmazonRekognitionClient.GetCelebrityInfoAsync(Amazon.Rekognition.Model.GetCelebrityInfoRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetCelebrityInfo operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetCelebrityInfo operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/GetCelebrityInfo">REST API Reference for GetCelebrityInfo Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.AmazonRekognitionClient.GetCelebrityRecognitionAsync(Amazon.Rekognition.Model.GetCelebrityRecognitionRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetCelebrityRecognition operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetCelebrityRecognition operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/GetCelebrityRecognition">REST API Reference for GetCelebrityRecognition Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.AmazonRekognitionClient.GetContentModerationAsync(Amazon.Rekognition.Model.GetContentModerationRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetContentModeration operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetContentModeration operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/GetContentModeration">REST API Reference for GetContentModeration Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.AmazonRekognitionClient.GetFaceDetectionAsync(Amazon.Rekognition.Model.GetFaceDetectionRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetFaceDetection operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetFaceDetection operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/GetFaceDetection">REST API Reference for GetFaceDetection Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.AmazonRekognitionClient.GetFaceSearchAsync(Amazon.Rekognition.Model.GetFaceSearchRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetFaceSearch operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetFaceSearch operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/GetFaceSearch">REST API Reference for GetFaceSearch Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.AmazonRekognitionClient.GetLabelDetectionAsync(Amazon.Rekognition.Model.GetLabelDetectionRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetLabelDetection operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetLabelDetection operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/GetLabelDetection">REST API Reference for GetLabelDetection Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.AmazonRekognitionClient.GetPersonTrackingAsync(Amazon.Rekognition.Model.GetPersonTrackingRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetPersonTracking operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetPersonTracking operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/GetPersonTracking">REST API Reference for GetPersonTracking Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.AmazonRekognitionClient.IndexFacesAsync(Amazon.Rekognition.Model.IndexFacesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the IndexFaces operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the IndexFaces operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/IndexFaces">REST API Reference for IndexFaces Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.AmazonRekognitionClient.ListCollectionsAsync(Amazon.Rekognition.Model.ListCollectionsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ListCollections operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListCollections operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/ListCollections">REST API Reference for ListCollections Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.AmazonRekognitionClient.ListFacesAsync(Amazon.Rekognition.Model.ListFacesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ListFaces operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListFaces operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/ListFaces">REST API Reference for ListFaces Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.AmazonRekognitionClient.ListStreamProcessorsAsync(Amazon.Rekognition.Model.ListStreamProcessorsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ListStreamProcessors operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListStreamProcessors operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/ListStreamProcessors">REST API Reference for ListStreamProcessors Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.AmazonRekognitionClient.RecognizeCelebritiesAsync(Amazon.Rekognition.Model.RecognizeCelebritiesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the RecognizeCelebrities operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the RecognizeCelebrities operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/RecognizeCelebrities">REST API Reference for RecognizeCelebrities Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.AmazonRekognitionClient.SearchFacesAsync(Amazon.Rekognition.Model.SearchFacesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the SearchFaces operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the SearchFaces operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/SearchFaces">REST API Reference for SearchFaces Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.AmazonRekognitionClient.SearchFacesByImageAsync(Amazon.Rekognition.Model.SearchFacesByImageRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the SearchFacesByImage operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the SearchFacesByImage operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/SearchFacesByImage">REST API Reference for SearchFacesByImage Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.AmazonRekognitionClient.StartCelebrityRecognitionAsync(Amazon.Rekognition.Model.StartCelebrityRecognitionRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the StartCelebrityRecognition operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the StartCelebrityRecognition operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/StartCelebrityRecognition">REST API Reference for StartCelebrityRecognition Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.AmazonRekognitionClient.StartContentModerationAsync(Amazon.Rekognition.Model.StartContentModerationRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the StartContentModeration operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the StartContentModeration operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/StartContentModeration">REST API Reference for StartContentModeration Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.AmazonRekognitionClient.StartFaceDetectionAsync(Amazon.Rekognition.Model.StartFaceDetectionRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the StartFaceDetection operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the StartFaceDetection operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/StartFaceDetection">REST API Reference for StartFaceDetection Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.AmazonRekognitionClient.StartFaceSearchAsync(Amazon.Rekognition.Model.StartFaceSearchRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the StartFaceSearch operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the StartFaceSearch operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/StartFaceSearch">REST API Reference for StartFaceSearch Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.AmazonRekognitionClient.StartLabelDetectionAsync(Amazon.Rekognition.Model.StartLabelDetectionRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the StartLabelDetection operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the StartLabelDetection operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/StartLabelDetection">REST API Reference for StartLabelDetection Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.AmazonRekognitionClient.StartPersonTrackingAsync(Amazon.Rekognition.Model.StartPersonTrackingRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the StartPersonTracking operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the StartPersonTracking operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/StartPersonTracking">REST API Reference for StartPersonTracking Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.AmazonRekognitionClient.StartStreamProcessorAsync(Amazon.Rekognition.Model.StartStreamProcessorRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the StartStreamProcessor operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the StartStreamProcessor operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/StartStreamProcessor">REST API Reference for StartStreamProcessor Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.AmazonRekognitionClient.StopStreamProcessorAsync(Amazon.Rekognition.Model.StopStreamProcessorRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the StopStreamProcessor operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the StopStreamProcessor operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/StopStreamProcessor">REST API Reference for StopStreamProcessor Operation</seealso>
        </member>
        <member name="T:Amazon.Rekognition.IAmazonRekognition">
             <summary>
             Interface for accessing Rekognition
            
             This is the Amazon Rekognition API reference.
             </summary>
        </member>
        <member name="M:Amazon.Rekognition.IAmazonRekognition.CompareFacesAsync(Amazon.Rekognition.Model.CompareFacesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CompareFaces operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CompareFaces operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/CompareFaces">REST API Reference for CompareFaces Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.IAmazonRekognition.CreateCollectionAsync(Amazon.Rekognition.Model.CreateCollectionRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateCollection operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateCollection operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/CreateCollection">REST API Reference for CreateCollection Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.IAmazonRekognition.CreateStreamProcessorAsync(Amazon.Rekognition.Model.CreateStreamProcessorRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateStreamProcessor operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateStreamProcessor operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/CreateStreamProcessor">REST API Reference for CreateStreamProcessor Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.IAmazonRekognition.DeleteCollectionAsync(Amazon.Rekognition.Model.DeleteCollectionRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteCollection operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteCollection operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/DeleteCollection">REST API Reference for DeleteCollection Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.IAmazonRekognition.DeleteFacesAsync(Amazon.Rekognition.Model.DeleteFacesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteFaces operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteFaces operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/DeleteFaces">REST API Reference for DeleteFaces Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.IAmazonRekognition.DeleteStreamProcessorAsync(Amazon.Rekognition.Model.DeleteStreamProcessorRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteStreamProcessor operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteStreamProcessor operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/DeleteStreamProcessor">REST API Reference for DeleteStreamProcessor Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.IAmazonRekognition.DescribeStreamProcessorAsync(Amazon.Rekognition.Model.DescribeStreamProcessorRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeStreamProcessor operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeStreamProcessor operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/DescribeStreamProcessor">REST API Reference for DescribeStreamProcessor Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.IAmazonRekognition.DetectFacesAsync(Amazon.Rekognition.Model.DetectFacesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DetectFaces operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DetectFaces operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/DetectFaces">REST API Reference for DetectFaces Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.IAmazonRekognition.DetectLabelsAsync(Amazon.Rekognition.Model.DetectLabelsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DetectLabels operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DetectLabels operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/DetectLabels">REST API Reference for DetectLabels Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.IAmazonRekognition.DetectModerationLabelsAsync(Amazon.Rekognition.Model.DetectModerationLabelsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DetectModerationLabels operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DetectModerationLabels operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/DetectModerationLabels">REST API Reference for DetectModerationLabels Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.IAmazonRekognition.DetectTextAsync(Amazon.Rekognition.Model.DetectTextRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DetectText operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DetectText operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/DetectText">REST API Reference for DetectText Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.IAmazonRekognition.GetCelebrityInfoAsync(Amazon.Rekognition.Model.GetCelebrityInfoRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetCelebrityInfo operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetCelebrityInfo operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/GetCelebrityInfo">REST API Reference for GetCelebrityInfo Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.IAmazonRekognition.GetCelebrityRecognitionAsync(Amazon.Rekognition.Model.GetCelebrityRecognitionRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetCelebrityRecognition operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetCelebrityRecognition operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/GetCelebrityRecognition">REST API Reference for GetCelebrityRecognition Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.IAmazonRekognition.GetContentModerationAsync(Amazon.Rekognition.Model.GetContentModerationRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetContentModeration operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetContentModeration operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/GetContentModeration">REST API Reference for GetContentModeration Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.IAmazonRekognition.GetFaceDetectionAsync(Amazon.Rekognition.Model.GetFaceDetectionRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetFaceDetection operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetFaceDetection operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/GetFaceDetection">REST API Reference for GetFaceDetection Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.IAmazonRekognition.GetFaceSearchAsync(Amazon.Rekognition.Model.GetFaceSearchRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetFaceSearch operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetFaceSearch operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/GetFaceSearch">REST API Reference for GetFaceSearch Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.IAmazonRekognition.GetLabelDetectionAsync(Amazon.Rekognition.Model.GetLabelDetectionRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetLabelDetection operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetLabelDetection operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/GetLabelDetection">REST API Reference for GetLabelDetection Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.IAmazonRekognition.GetPersonTrackingAsync(Amazon.Rekognition.Model.GetPersonTrackingRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetPersonTracking operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetPersonTracking operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/GetPersonTracking">REST API Reference for GetPersonTracking Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.IAmazonRekognition.IndexFacesAsync(Amazon.Rekognition.Model.IndexFacesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the IndexFaces operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the IndexFaces operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/IndexFaces">REST API Reference for IndexFaces Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.IAmazonRekognition.ListCollectionsAsync(Amazon.Rekognition.Model.ListCollectionsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ListCollections operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListCollections operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/ListCollections">REST API Reference for ListCollections Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.IAmazonRekognition.ListFacesAsync(Amazon.Rekognition.Model.ListFacesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ListFaces operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListFaces operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/ListFaces">REST API Reference for ListFaces Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.IAmazonRekognition.ListStreamProcessorsAsync(Amazon.Rekognition.Model.ListStreamProcessorsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ListStreamProcessors operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListStreamProcessors operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/ListStreamProcessors">REST API Reference for ListStreamProcessors Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.IAmazonRekognition.RecognizeCelebritiesAsync(Amazon.Rekognition.Model.RecognizeCelebritiesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the RecognizeCelebrities operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the RecognizeCelebrities operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/RecognizeCelebrities">REST API Reference for RecognizeCelebrities Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.IAmazonRekognition.SearchFacesAsync(Amazon.Rekognition.Model.SearchFacesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the SearchFaces operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the SearchFaces operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/SearchFaces">REST API Reference for SearchFaces Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.IAmazonRekognition.SearchFacesByImageAsync(Amazon.Rekognition.Model.SearchFacesByImageRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the SearchFacesByImage operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the SearchFacesByImage operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/SearchFacesByImage">REST API Reference for SearchFacesByImage Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.IAmazonRekognition.StartCelebrityRecognitionAsync(Amazon.Rekognition.Model.StartCelebrityRecognitionRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the StartCelebrityRecognition operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the StartCelebrityRecognition operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/StartCelebrityRecognition">REST API Reference for StartCelebrityRecognition Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.IAmazonRekognition.StartContentModerationAsync(Amazon.Rekognition.Model.StartContentModerationRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the StartContentModeration operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the StartContentModeration operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/StartContentModeration">REST API Reference for StartContentModeration Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.IAmazonRekognition.StartFaceDetectionAsync(Amazon.Rekognition.Model.StartFaceDetectionRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the StartFaceDetection operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the StartFaceDetection operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/StartFaceDetection">REST API Reference for StartFaceDetection Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.IAmazonRekognition.StartFaceSearchAsync(Amazon.Rekognition.Model.StartFaceSearchRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the StartFaceSearch operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the StartFaceSearch operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/StartFaceSearch">REST API Reference for StartFaceSearch Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.IAmazonRekognition.StartLabelDetectionAsync(Amazon.Rekognition.Model.StartLabelDetectionRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the StartLabelDetection operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the StartLabelDetection operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/StartLabelDetection">REST API Reference for StartLabelDetection Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.IAmazonRekognition.StartPersonTrackingAsync(Amazon.Rekognition.Model.StartPersonTrackingRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the StartPersonTracking operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the StartPersonTracking operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/StartPersonTracking">REST API Reference for StartPersonTracking Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.IAmazonRekognition.StartStreamProcessorAsync(Amazon.Rekognition.Model.StartStreamProcessorRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the StartStreamProcessor operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the StartStreamProcessor operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/StartStreamProcessor">REST API Reference for StartStreamProcessor Operation</seealso>
        </member>
        <member name="M:Amazon.Rekognition.IAmazonRekognition.StopStreamProcessorAsync(Amazon.Rekognition.Model.StopStreamProcessorRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the StopStreamProcessor operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the StopStreamProcessor operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/rekognition-2016-06-27/StopStreamProcessor">REST API Reference for StopStreamProcessor Operation</seealso>
        </member>
    </members>
</doc>
